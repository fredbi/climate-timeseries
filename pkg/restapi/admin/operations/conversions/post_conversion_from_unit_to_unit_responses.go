// Code generated by go-swagger; DO NOT EDIT.

package conversions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PostConversionFromUnitToUnitCreatedCode is the HTTP code returned for type PostConversionFromUnitToUnitCreated
const PostConversionFromUnitToUnitCreatedCode int = 201

/*PostConversionFromUnitToUnitCreated Unit conversion added


swagger:response postConversionFromUnitToUnitCreated
*/
type PostConversionFromUnitToUnitCreated struct {
}

// NewPostConversionFromUnitToUnitCreated creates PostConversionFromUnitToUnitCreated with default headers values
func NewPostConversionFromUnitToUnitCreated() *PostConversionFromUnitToUnitCreated {

	return &PostConversionFromUnitToUnitCreated{}
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

func (o *PostConversionFromUnitToUnitCreated) PostConversionFromUnitToUnitResponder() {}

// PostConversionFromUnitToUnitBadRequestCode is the HTTP code returned for type PostConversionFromUnitToUnitBadRequest
const PostConversionFromUnitToUnitBadRequestCode int = 400

/*PostConversionFromUnitToUnitBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response postConversionFromUnitToUnitBadRequest
*/
type PostConversionFromUnitToUnitBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostConversionFromUnitToUnitBadRequest creates PostConversionFromUnitToUnitBadRequest with default headers values
func NewPostConversionFromUnitToUnitBadRequest() *PostConversionFromUnitToUnitBadRequest {

	return &PostConversionFromUnitToUnitBadRequest{}
}

// WithPayload adds the payload to the post conversion from unit to unit bad request response
func (o *PostConversionFromUnitToUnitBadRequest) WithPayload(payload *models.APIError) *PostConversionFromUnitToUnitBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post conversion from unit to unit bad request response
func (o *PostConversionFromUnitToUnitBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostConversionFromUnitToUnitBadRequest) PostConversionFromUnitToUnitResponder() {}

// PostConversionFromUnitToUnitUnauthorizedCode is the HTTP code returned for type PostConversionFromUnitToUnitUnauthorized
const PostConversionFromUnitToUnitUnauthorizedCode int = 401

/*PostConversionFromUnitToUnitUnauthorized Unauthorized access for a lack of authentication


swagger:response postConversionFromUnitToUnitUnauthorized
*/
type PostConversionFromUnitToUnitUnauthorized struct {
}

// NewPostConversionFromUnitToUnitUnauthorized creates PostConversionFromUnitToUnitUnauthorized with default headers values
func NewPostConversionFromUnitToUnitUnauthorized() *PostConversionFromUnitToUnitUnauthorized {

	return &PostConversionFromUnitToUnitUnauthorized{}
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *PostConversionFromUnitToUnitUnauthorized) PostConversionFromUnitToUnitResponder() {}

// PostConversionFromUnitToUnitForbiddenCode is the HTTP code returned for type PostConversionFromUnitToUnitForbidden
const PostConversionFromUnitToUnitForbiddenCode int = 403

/*PostConversionFromUnitToUnitForbidden Forbidden access for a lack of sufficient privileges


swagger:response postConversionFromUnitToUnitForbidden
*/
type PostConversionFromUnitToUnitForbidden struct {
}

// NewPostConversionFromUnitToUnitForbidden creates PostConversionFromUnitToUnitForbidden with default headers values
func NewPostConversionFromUnitToUnitForbidden() *PostConversionFromUnitToUnitForbidden {

	return &PostConversionFromUnitToUnitForbidden{}
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *PostConversionFromUnitToUnitForbidden) PostConversionFromUnitToUnitResponder() {}

// PostConversionFromUnitToUnitNotFoundCode is the HTTP code returned for type PostConversionFromUnitToUnitNotFound
const PostConversionFromUnitToUnitNotFoundCode int = 404

/*PostConversionFromUnitToUnitNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response postConversionFromUnitToUnitNotFound
*/
type PostConversionFromUnitToUnitNotFound struct {
}

// NewPostConversionFromUnitToUnitNotFound creates PostConversionFromUnitToUnitNotFound with default headers values
func NewPostConversionFromUnitToUnitNotFound() *PostConversionFromUnitToUnitNotFound {

	return &PostConversionFromUnitToUnitNotFound{}
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *PostConversionFromUnitToUnitNotFound) PostConversionFromUnitToUnitResponder() {}

// PostConversionFromUnitToUnitMethodNotAllowedCode is the HTTP code returned for type PostConversionFromUnitToUnitMethodNotAllowed
const PostConversionFromUnitToUnitMethodNotAllowedCode int = 405

/*PostConversionFromUnitToUnitMethodNotAllowed MethodNotAllowed


swagger:response postConversionFromUnitToUnitMethodNotAllowed
*/
type PostConversionFromUnitToUnitMethodNotAllowed struct {
}

// NewPostConversionFromUnitToUnitMethodNotAllowed creates PostConversionFromUnitToUnitMethodNotAllowed with default headers values
func NewPostConversionFromUnitToUnitMethodNotAllowed() *PostConversionFromUnitToUnitMethodNotAllowed {

	return &PostConversionFromUnitToUnitMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *PostConversionFromUnitToUnitMethodNotAllowed) PostConversionFromUnitToUnitResponder() {}

// PostConversionFromUnitToUnitConflictCode is the HTTP code returned for type PostConversionFromUnitToUnitConflict
const PostConversionFromUnitToUnitConflictCode int = 409

/*PostConversionFromUnitToUnitConflict Resource already exists. An object creation was requested, but this object was already existing.


swagger:response postConversionFromUnitToUnitConflict
*/
type PostConversionFromUnitToUnitConflict struct {
}

// NewPostConversionFromUnitToUnitConflict creates PostConversionFromUnitToUnitConflict with default headers values
func NewPostConversionFromUnitToUnitConflict() *PostConversionFromUnitToUnitConflict {

	return &PostConversionFromUnitToUnitConflict{}
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

func (o *PostConversionFromUnitToUnitConflict) PostConversionFromUnitToUnitResponder() {}

// PostConversionFromUnitToUnitInternalServerErrorCode is the HTTP code returned for type PostConversionFromUnitToUnitInternalServerError
const PostConversionFromUnitToUnitInternalServerErrorCode int = 500

/*PostConversionFromUnitToUnitInternalServerError An internal error has occured. See error details.


swagger:response postConversionFromUnitToUnitInternalServerError
*/
type PostConversionFromUnitToUnitInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostConversionFromUnitToUnitInternalServerError creates PostConversionFromUnitToUnitInternalServerError with default headers values
func NewPostConversionFromUnitToUnitInternalServerError() *PostConversionFromUnitToUnitInternalServerError {

	return &PostConversionFromUnitToUnitInternalServerError{}
}

// WithPayload adds the payload to the post conversion from unit to unit internal server error response
func (o *PostConversionFromUnitToUnitInternalServerError) WithPayload(payload *models.APIError) *PostConversionFromUnitToUnitInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post conversion from unit to unit internal server error response
func (o *PostConversionFromUnitToUnitInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostConversionFromUnitToUnitInternalServerError) PostConversionFromUnitToUnitResponder() {}

/*PostConversionFromUnitToUnitDefault Other error. See error details.


swagger:response postConversionFromUnitToUnitDefault
*/
type PostConversionFromUnitToUnitDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostConversionFromUnitToUnitDefault creates PostConversionFromUnitToUnitDefault with default headers values
func NewPostConversionFromUnitToUnitDefault(code int) *PostConversionFromUnitToUnitDefault {
	if code <= 0 {
		code = 500
	}

	return &PostConversionFromUnitToUnitDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post conversion from unit to unit default response
func (o *PostConversionFromUnitToUnitDefault) WithStatusCode(code int) *PostConversionFromUnitToUnitDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post conversion from unit to unit default response
func (o *PostConversionFromUnitToUnitDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post conversion from unit to unit default response
func (o *PostConversionFromUnitToUnitDefault) WithPayload(payload *models.APIError) *PostConversionFromUnitToUnitDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post conversion from unit to unit default response
func (o *PostConversionFromUnitToUnitDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConversionFromUnitToUnitDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostConversionFromUnitToUnitDefault) PostConversionFromUnitToUnitResponder() {}

type PostConversionFromUnitToUnitNotImplementedResponder struct {
	middleware.Responder
}

func (*PostConversionFromUnitToUnitNotImplementedResponder) PostConversionFromUnitToUnitResponder() {}

func PostConversionFromUnitToUnitNotImplemented() PostConversionFromUnitToUnitResponder {
	return &PostConversionFromUnitToUnitNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PostConversionFromUnitToUnit has not yet been implemented",
		),
	}
}

type PostConversionFromUnitToUnitResponder interface {
	middleware.Responder
	PostConversionFromUnitToUnitResponder()
}
