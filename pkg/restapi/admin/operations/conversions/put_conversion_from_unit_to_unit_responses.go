// Code generated by go-swagger; DO NOT EDIT.

package conversions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PutConversionFromUnitToUnitNoContentCode is the HTTP code returned for type PutConversionFromUnitToUnitNoContent
const PutConversionFromUnitToUnitNoContentCode int = 204

/*PutConversionFromUnitToUnitNoContent Unit conversion updated.


swagger:response putConversionFromUnitToUnitNoContent
*/
type PutConversionFromUnitToUnitNoContent struct {
}

// NewPutConversionFromUnitToUnitNoContent creates PutConversionFromUnitToUnitNoContent with default headers values
func NewPutConversionFromUnitToUnitNoContent() *PutConversionFromUnitToUnitNoContent {

	return &PutConversionFromUnitToUnitNoContent{}
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PutConversionFromUnitToUnitNoContent) PutConversionFromUnitToUnitResponder() {}

// PutConversionFromUnitToUnitBadRequestCode is the HTTP code returned for type PutConversionFromUnitToUnitBadRequest
const PutConversionFromUnitToUnitBadRequestCode int = 400

/*PutConversionFromUnitToUnitBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response putConversionFromUnitToUnitBadRequest
*/
type PutConversionFromUnitToUnitBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutConversionFromUnitToUnitBadRequest creates PutConversionFromUnitToUnitBadRequest with default headers values
func NewPutConversionFromUnitToUnitBadRequest() *PutConversionFromUnitToUnitBadRequest {

	return &PutConversionFromUnitToUnitBadRequest{}
}

// WithPayload adds the payload to the put conversion from unit to unit bad request response
func (o *PutConversionFromUnitToUnitBadRequest) WithPayload(payload *models.APIError) *PutConversionFromUnitToUnitBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversion from unit to unit bad request response
func (o *PutConversionFromUnitToUnitBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutConversionFromUnitToUnitBadRequest) PutConversionFromUnitToUnitResponder() {}

// PutConversionFromUnitToUnitUnauthorizedCode is the HTTP code returned for type PutConversionFromUnitToUnitUnauthorized
const PutConversionFromUnitToUnitUnauthorizedCode int = 401

/*PutConversionFromUnitToUnitUnauthorized Unauthorized access for a lack of authentication


swagger:response putConversionFromUnitToUnitUnauthorized
*/
type PutConversionFromUnitToUnitUnauthorized struct {
}

// NewPutConversionFromUnitToUnitUnauthorized creates PutConversionFromUnitToUnitUnauthorized with default headers values
func NewPutConversionFromUnitToUnitUnauthorized() *PutConversionFromUnitToUnitUnauthorized {

	return &PutConversionFromUnitToUnitUnauthorized{}
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *PutConversionFromUnitToUnitUnauthorized) PutConversionFromUnitToUnitResponder() {}

// PutConversionFromUnitToUnitForbiddenCode is the HTTP code returned for type PutConversionFromUnitToUnitForbidden
const PutConversionFromUnitToUnitForbiddenCode int = 403

/*PutConversionFromUnitToUnitForbidden Forbidden access for a lack of sufficient privileges


swagger:response putConversionFromUnitToUnitForbidden
*/
type PutConversionFromUnitToUnitForbidden struct {
}

// NewPutConversionFromUnitToUnitForbidden creates PutConversionFromUnitToUnitForbidden with default headers values
func NewPutConversionFromUnitToUnitForbidden() *PutConversionFromUnitToUnitForbidden {

	return &PutConversionFromUnitToUnitForbidden{}
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *PutConversionFromUnitToUnitForbidden) PutConversionFromUnitToUnitResponder() {}

// PutConversionFromUnitToUnitNotFoundCode is the HTTP code returned for type PutConversionFromUnitToUnitNotFound
const PutConversionFromUnitToUnitNotFoundCode int = 404

/*PutConversionFromUnitToUnitNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response putConversionFromUnitToUnitNotFound
*/
type PutConversionFromUnitToUnitNotFound struct {
}

// NewPutConversionFromUnitToUnitNotFound creates PutConversionFromUnitToUnitNotFound with default headers values
func NewPutConversionFromUnitToUnitNotFound() *PutConversionFromUnitToUnitNotFound {

	return &PutConversionFromUnitToUnitNotFound{}
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *PutConversionFromUnitToUnitNotFound) PutConversionFromUnitToUnitResponder() {}

// PutConversionFromUnitToUnitMethodNotAllowedCode is the HTTP code returned for type PutConversionFromUnitToUnitMethodNotAllowed
const PutConversionFromUnitToUnitMethodNotAllowedCode int = 405

/*PutConversionFromUnitToUnitMethodNotAllowed MethodNotAllowed


swagger:response putConversionFromUnitToUnitMethodNotAllowed
*/
type PutConversionFromUnitToUnitMethodNotAllowed struct {
}

// NewPutConversionFromUnitToUnitMethodNotAllowed creates PutConversionFromUnitToUnitMethodNotAllowed with default headers values
func NewPutConversionFromUnitToUnitMethodNotAllowed() *PutConversionFromUnitToUnitMethodNotAllowed {

	return &PutConversionFromUnitToUnitMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *PutConversionFromUnitToUnitMethodNotAllowed) PutConversionFromUnitToUnitResponder() {}

// PutConversionFromUnitToUnitInternalServerErrorCode is the HTTP code returned for type PutConversionFromUnitToUnitInternalServerError
const PutConversionFromUnitToUnitInternalServerErrorCode int = 500

/*PutConversionFromUnitToUnitInternalServerError An internal error has occured. See error details.


swagger:response putConversionFromUnitToUnitInternalServerError
*/
type PutConversionFromUnitToUnitInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutConversionFromUnitToUnitInternalServerError creates PutConversionFromUnitToUnitInternalServerError with default headers values
func NewPutConversionFromUnitToUnitInternalServerError() *PutConversionFromUnitToUnitInternalServerError {

	return &PutConversionFromUnitToUnitInternalServerError{}
}

// WithPayload adds the payload to the put conversion from unit to unit internal server error response
func (o *PutConversionFromUnitToUnitInternalServerError) WithPayload(payload *models.APIError) *PutConversionFromUnitToUnitInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversion from unit to unit internal server error response
func (o *PutConversionFromUnitToUnitInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutConversionFromUnitToUnitInternalServerError) PutConversionFromUnitToUnitResponder() {}

/*PutConversionFromUnitToUnitDefault Other error. See error details.


swagger:response putConversionFromUnitToUnitDefault
*/
type PutConversionFromUnitToUnitDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutConversionFromUnitToUnitDefault creates PutConversionFromUnitToUnitDefault with default headers values
func NewPutConversionFromUnitToUnitDefault(code int) *PutConversionFromUnitToUnitDefault {
	if code <= 0 {
		code = 500
	}

	return &PutConversionFromUnitToUnitDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put conversion from unit to unit default response
func (o *PutConversionFromUnitToUnitDefault) WithStatusCode(code int) *PutConversionFromUnitToUnitDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put conversion from unit to unit default response
func (o *PutConversionFromUnitToUnitDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put conversion from unit to unit default response
func (o *PutConversionFromUnitToUnitDefault) WithPayload(payload *models.APIError) *PutConversionFromUnitToUnitDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversion from unit to unit default response
func (o *PutConversionFromUnitToUnitDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversionFromUnitToUnitDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutConversionFromUnitToUnitDefault) PutConversionFromUnitToUnitResponder() {}

type PutConversionFromUnitToUnitNotImplementedResponder struct {
	middleware.Responder
}

func (*PutConversionFromUnitToUnitNotImplementedResponder) PutConversionFromUnitToUnitResponder() {}

func PutConversionFromUnitToUnitNotImplemented() PutConversionFromUnitToUnitResponder {
	return &PutConversionFromUnitToUnitNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutConversionFromUnitToUnit has not yet been implemented",
		),
	}
}

type PutConversionFromUnitToUnitResponder interface {
	middleware.Responder
	PutConversionFromUnitToUnitResponder()
}
