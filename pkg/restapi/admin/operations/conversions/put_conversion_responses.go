// Code generated by go-swagger; DO NOT EDIT.

package conversions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PutConversionNoContentCode is the HTTP code returned for type PutConversionNoContent
const PutConversionNoContentCode int = 204

/*PutConversionNoContent Unit conversion updated.


swagger:response putConversionNoContent
*/
type PutConversionNoContent struct {
}

// NewPutConversionNoContent creates PutConversionNoContent with default headers values
func NewPutConversionNoContent() *PutConversionNoContent {

	return &PutConversionNoContent{}
}

// WriteResponse to the client
func (o *PutConversionNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PutConversionNoContent) PutConversionResponder() {}

// PutConversionBadRequestCode is the HTTP code returned for type PutConversionBadRequest
const PutConversionBadRequestCode int = 400

/*PutConversionBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response putConversionBadRequest
*/
type PutConversionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutConversionBadRequest creates PutConversionBadRequest with default headers values
func NewPutConversionBadRequest() *PutConversionBadRequest {

	return &PutConversionBadRequest{}
}

// WithPayload adds the payload to the put conversion bad request response
func (o *PutConversionBadRequest) WithPayload(payload *models.APIError) *PutConversionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversion bad request response
func (o *PutConversionBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutConversionBadRequest) PutConversionResponder() {}

// PutConversionUnauthorizedCode is the HTTP code returned for type PutConversionUnauthorized
const PutConversionUnauthorizedCode int = 401

/*PutConversionUnauthorized Unauthorized access for a lack of authentication


swagger:response putConversionUnauthorized
*/
type PutConversionUnauthorized struct {
}

// NewPutConversionUnauthorized creates PutConversionUnauthorized with default headers values
func NewPutConversionUnauthorized() *PutConversionUnauthorized {

	return &PutConversionUnauthorized{}
}

// WriteResponse to the client
func (o *PutConversionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *PutConversionUnauthorized) PutConversionResponder() {}

// PutConversionForbiddenCode is the HTTP code returned for type PutConversionForbidden
const PutConversionForbiddenCode int = 403

/*PutConversionForbidden Forbidden access for a lack of sufficient privileges


swagger:response putConversionForbidden
*/
type PutConversionForbidden struct {
}

// NewPutConversionForbidden creates PutConversionForbidden with default headers values
func NewPutConversionForbidden() *PutConversionForbidden {

	return &PutConversionForbidden{}
}

// WriteResponse to the client
func (o *PutConversionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *PutConversionForbidden) PutConversionResponder() {}

// PutConversionNotFoundCode is the HTTP code returned for type PutConversionNotFound
const PutConversionNotFoundCode int = 404

/*PutConversionNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response putConversionNotFound
*/
type PutConversionNotFound struct {
}

// NewPutConversionNotFound creates PutConversionNotFound with default headers values
func NewPutConversionNotFound() *PutConversionNotFound {

	return &PutConversionNotFound{}
}

// WriteResponse to the client
func (o *PutConversionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *PutConversionNotFound) PutConversionResponder() {}

// PutConversionMethodNotAllowedCode is the HTTP code returned for type PutConversionMethodNotAllowed
const PutConversionMethodNotAllowedCode int = 405

/*PutConversionMethodNotAllowed MethodNotAllowed


swagger:response putConversionMethodNotAllowed
*/
type PutConversionMethodNotAllowed struct {
}

// NewPutConversionMethodNotAllowed creates PutConversionMethodNotAllowed with default headers values
func NewPutConversionMethodNotAllowed() *PutConversionMethodNotAllowed {

	return &PutConversionMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PutConversionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *PutConversionMethodNotAllowed) PutConversionResponder() {}

// PutConversionInternalServerErrorCode is the HTTP code returned for type PutConversionInternalServerError
const PutConversionInternalServerErrorCode int = 500

/*PutConversionInternalServerError An internal error has occured. See error details.


swagger:response putConversionInternalServerError
*/
type PutConversionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutConversionInternalServerError creates PutConversionInternalServerError with default headers values
func NewPutConversionInternalServerError() *PutConversionInternalServerError {

	return &PutConversionInternalServerError{}
}

// WithPayload adds the payload to the put conversion internal server error response
func (o *PutConversionInternalServerError) WithPayload(payload *models.APIError) *PutConversionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversion internal server error response
func (o *PutConversionInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutConversionInternalServerError) PutConversionResponder() {}

/*PutConversionDefault Other error. See error details.


swagger:response putConversionDefault
*/
type PutConversionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutConversionDefault creates PutConversionDefault with default headers values
func NewPutConversionDefault(code int) *PutConversionDefault {
	if code <= 0 {
		code = 500
	}

	return &PutConversionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put conversion default response
func (o *PutConversionDefault) WithStatusCode(code int) *PutConversionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put conversion default response
func (o *PutConversionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put conversion default response
func (o *PutConversionDefault) WithPayload(payload *models.APIError) *PutConversionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversion default response
func (o *PutConversionDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutConversionDefault) PutConversionResponder() {}

type PutConversionNotImplementedResponder struct {
	middleware.Responder
}

func (*PutConversionNotImplementedResponder) PutConversionResponder() {}

func PutConversionNotImplemented() PutConversionResponder {
	return &PutConversionNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutConversion has not yet been implemented",
		),
	}
}

type PutConversionResponder interface {
	middleware.Responder
	PutConversionResponder()
}
