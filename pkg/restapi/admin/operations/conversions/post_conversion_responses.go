// Code generated by go-swagger; DO NOT EDIT.

package conversions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PostConversionCreatedCode is the HTTP code returned for type PostConversionCreated
const PostConversionCreatedCode int = 201

/*PostConversionCreated Unit conversion added


swagger:response postConversionCreated
*/
type PostConversionCreated struct {
}

// NewPostConversionCreated creates PostConversionCreated with default headers values
func NewPostConversionCreated() *PostConversionCreated {

	return &PostConversionCreated{}
}

// WriteResponse to the client
func (o *PostConversionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

func (o *PostConversionCreated) PostConversionResponder() {}

// PostConversionBadRequestCode is the HTTP code returned for type PostConversionBadRequest
const PostConversionBadRequestCode int = 400

/*PostConversionBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response postConversionBadRequest
*/
type PostConversionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostConversionBadRequest creates PostConversionBadRequest with default headers values
func NewPostConversionBadRequest() *PostConversionBadRequest {

	return &PostConversionBadRequest{}
}

// WithPayload adds the payload to the post conversion bad request response
func (o *PostConversionBadRequest) WithPayload(payload *models.APIError) *PostConversionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post conversion bad request response
func (o *PostConversionBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConversionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostConversionBadRequest) PostConversionResponder() {}

// PostConversionUnauthorizedCode is the HTTP code returned for type PostConversionUnauthorized
const PostConversionUnauthorizedCode int = 401

/*PostConversionUnauthorized Unauthorized access for a lack of authentication


swagger:response postConversionUnauthorized
*/
type PostConversionUnauthorized struct {
}

// NewPostConversionUnauthorized creates PostConversionUnauthorized with default headers values
func NewPostConversionUnauthorized() *PostConversionUnauthorized {

	return &PostConversionUnauthorized{}
}

// WriteResponse to the client
func (o *PostConversionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *PostConversionUnauthorized) PostConversionResponder() {}

// PostConversionForbiddenCode is the HTTP code returned for type PostConversionForbidden
const PostConversionForbiddenCode int = 403

/*PostConversionForbidden Forbidden access for a lack of sufficient privileges


swagger:response postConversionForbidden
*/
type PostConversionForbidden struct {
}

// NewPostConversionForbidden creates PostConversionForbidden with default headers values
func NewPostConversionForbidden() *PostConversionForbidden {

	return &PostConversionForbidden{}
}

// WriteResponse to the client
func (o *PostConversionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *PostConversionForbidden) PostConversionResponder() {}

// PostConversionNotFoundCode is the HTTP code returned for type PostConversionNotFound
const PostConversionNotFoundCode int = 404

/*PostConversionNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response postConversionNotFound
*/
type PostConversionNotFound struct {
}

// NewPostConversionNotFound creates PostConversionNotFound with default headers values
func NewPostConversionNotFound() *PostConversionNotFound {

	return &PostConversionNotFound{}
}

// WriteResponse to the client
func (o *PostConversionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *PostConversionNotFound) PostConversionResponder() {}

// PostConversionMethodNotAllowedCode is the HTTP code returned for type PostConversionMethodNotAllowed
const PostConversionMethodNotAllowedCode int = 405

/*PostConversionMethodNotAllowed MethodNotAllowed


swagger:response postConversionMethodNotAllowed
*/
type PostConversionMethodNotAllowed struct {
}

// NewPostConversionMethodNotAllowed creates PostConversionMethodNotAllowed with default headers values
func NewPostConversionMethodNotAllowed() *PostConversionMethodNotAllowed {

	return &PostConversionMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PostConversionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *PostConversionMethodNotAllowed) PostConversionResponder() {}

// PostConversionConflictCode is the HTTP code returned for type PostConversionConflict
const PostConversionConflictCode int = 409

/*PostConversionConflict Resource already exists. An object creation was requested, but this object was already existing.


swagger:response postConversionConflict
*/
type PostConversionConflict struct {
}

// NewPostConversionConflict creates PostConversionConflict with default headers values
func NewPostConversionConflict() *PostConversionConflict {

	return &PostConversionConflict{}
}

// WriteResponse to the client
func (o *PostConversionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

func (o *PostConversionConflict) PostConversionResponder() {}

// PostConversionInternalServerErrorCode is the HTTP code returned for type PostConversionInternalServerError
const PostConversionInternalServerErrorCode int = 500

/*PostConversionInternalServerError An internal error has occured. See error details.


swagger:response postConversionInternalServerError
*/
type PostConversionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostConversionInternalServerError creates PostConversionInternalServerError with default headers values
func NewPostConversionInternalServerError() *PostConversionInternalServerError {

	return &PostConversionInternalServerError{}
}

// WithPayload adds the payload to the post conversion internal server error response
func (o *PostConversionInternalServerError) WithPayload(payload *models.APIError) *PostConversionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post conversion internal server error response
func (o *PostConversionInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConversionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostConversionInternalServerError) PostConversionResponder() {}

/*PostConversionDefault Other error. See error details.


swagger:response postConversionDefault
*/
type PostConversionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostConversionDefault creates PostConversionDefault with default headers values
func NewPostConversionDefault(code int) *PostConversionDefault {
	if code <= 0 {
		code = 500
	}

	return &PostConversionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post conversion default response
func (o *PostConversionDefault) WithStatusCode(code int) *PostConversionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post conversion default response
func (o *PostConversionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post conversion default response
func (o *PostConversionDefault) WithPayload(payload *models.APIError) *PostConversionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post conversion default response
func (o *PostConversionDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConversionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostConversionDefault) PostConversionResponder() {}

type PostConversionNotImplementedResponder struct {
	middleware.Responder
}

func (*PostConversionNotImplementedResponder) PostConversionResponder() {}

func PostConversionNotImplemented() PostConversionResponder {
	return &PostConversionNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PostConversion has not yet been implemented",
		),
	}
}

type PostConversionResponder interface {
	middleware.Responder
	PostConversionResponder()
}
