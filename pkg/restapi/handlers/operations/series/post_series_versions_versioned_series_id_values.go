// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostSeriesVersionsVersionedSeriesIDValuesHandlerFunc turns a function with the right signature into a post series versions versioned series ID values handler
type PostSeriesVersionsVersionedSeriesIDValuesHandlerFunc func(PostSeriesVersionsVersionedSeriesIDValuesParams) PostSeriesVersionsVersionedSeriesIDValuesResponder

// Handle executing the request and returning a response
func (fn PostSeriesVersionsVersionedSeriesIDValuesHandlerFunc) Handle(params PostSeriesVersionsVersionedSeriesIDValuesParams) PostSeriesVersionsVersionedSeriesIDValuesResponder {
	return fn(params)
}

// PostSeriesVersionsVersionedSeriesIDValuesHandler interface for that can handle valid post series versions versioned series ID values params
type PostSeriesVersionsVersionedSeriesIDValuesHandler interface {
	Handle(PostSeriesVersionsVersionedSeriesIDValuesParams) PostSeriesVersionsVersionedSeriesIDValuesResponder
}

// NewPostSeriesVersionsVersionedSeriesIDValues creates a new http.Handler for the post series versions versioned series ID values operation
func NewPostSeriesVersionsVersionedSeriesIDValues(ctx *middleware.Context, handler PostSeriesVersionsVersionedSeriesIDValuesHandler) *PostSeriesVersionsVersionedSeriesIDValues {
	return &PostSeriesVersionsVersionedSeriesIDValues{Context: ctx, Handler: handler}
}

/* PostSeriesVersionsVersionedSeriesIDValues swagger:route POST /series/versions/{versionedSeriesId}/values series versioning postSeriesVersionsVersionedSeriesIdValues

Uploads values to the version of a time series

This endpoint creates time series values for the latest version.

Only the owners of the time series may add values.

A conflict is reported if values were already attributed to this version. Use PUT to update existing values.

If the request negotiates a request MIME type with text/csv (with the Content-Type header),
this endpoint consumes a CSV file.


*/
type PostSeriesVersionsVersionedSeriesIDValues struct {
	Context *middleware.Context
	Handler PostSeriesVersionsVersionedSeriesIDValuesHandler
}

func (o *PostSeriesVersionsVersionedSeriesIDValues) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostSeriesVersionsVersionedSeriesIDValuesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
