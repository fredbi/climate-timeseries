// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetSeriesSeriesIDOKCode is the HTTP code returned for type GetSeriesSeriesIDOK
const GetSeriesSeriesIDOKCode int = 200

/*GetSeriesSeriesIDOK All available versions of a climate timeseries.


swagger:response getSeriesSeriesIdOK
*/
type GetSeriesSeriesIDOK struct {

	/*
	  In: Body
	*/
	Payload []models.VersionedSeries `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDOK creates GetSeriesSeriesIDOK with default headers values
func NewGetSeriesSeriesIDOK() *GetSeriesSeriesIDOK {

	return &GetSeriesSeriesIDOK{}
}

// WithPayload adds the payload to the get series series Id o k response
func (o *GetSeriesSeriesIDOK) WithPayload(payload []models.VersionedSeries) *GetSeriesSeriesIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series Id o k response
func (o *GetSeriesSeriesIDOK) SetPayload(payload []models.VersionedSeries) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]models.VersionedSeries, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetSeriesSeriesIDOK) GetSeriesSeriesIDResponder() {}

// GetSeriesSeriesIDBadRequestCode is the HTTP code returned for type GetSeriesSeriesIDBadRequest
const GetSeriesSeriesIDBadRequestCode int = 400

/*GetSeriesSeriesIDBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response getSeriesSeriesIdBadRequest
*/
type GetSeriesSeriesIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDBadRequest creates GetSeriesSeriesIDBadRequest with default headers values
func NewGetSeriesSeriesIDBadRequest() *GetSeriesSeriesIDBadRequest {

	return &GetSeriesSeriesIDBadRequest{}
}

// WithPayload adds the payload to the get series series Id bad request response
func (o *GetSeriesSeriesIDBadRequest) WithPayload(payload *models.APIError) *GetSeriesSeriesIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series Id bad request response
func (o *GetSeriesSeriesIDBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSeriesSeriesIDBadRequest) GetSeriesSeriesIDResponder() {}

// GetSeriesSeriesIDUnauthorizedCode is the HTTP code returned for type GetSeriesSeriesIDUnauthorized
const GetSeriesSeriesIDUnauthorizedCode int = 401

/*GetSeriesSeriesIDUnauthorized Unauthorized access for a lack of authentication


swagger:response getSeriesSeriesIdUnauthorized
*/
type GetSeriesSeriesIDUnauthorized struct {
}

// NewGetSeriesSeriesIDUnauthorized creates GetSeriesSeriesIDUnauthorized with default headers values
func NewGetSeriesSeriesIDUnauthorized() *GetSeriesSeriesIDUnauthorized {

	return &GetSeriesSeriesIDUnauthorized{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *GetSeriesSeriesIDUnauthorized) GetSeriesSeriesIDResponder() {}

// GetSeriesSeriesIDForbiddenCode is the HTTP code returned for type GetSeriesSeriesIDForbidden
const GetSeriesSeriesIDForbiddenCode int = 403

/*GetSeriesSeriesIDForbidden Forbidden access for a lack of sufficient privileges


swagger:response getSeriesSeriesIdForbidden
*/
type GetSeriesSeriesIDForbidden struct {
}

// NewGetSeriesSeriesIDForbidden creates GetSeriesSeriesIDForbidden with default headers values
func NewGetSeriesSeriesIDForbidden() *GetSeriesSeriesIDForbidden {

	return &GetSeriesSeriesIDForbidden{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *GetSeriesSeriesIDForbidden) GetSeriesSeriesIDResponder() {}

// GetSeriesSeriesIDNotFoundCode is the HTTP code returned for type GetSeriesSeriesIDNotFound
const GetSeriesSeriesIDNotFoundCode int = 404

/*GetSeriesSeriesIDNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response getSeriesSeriesIdNotFound
*/
type GetSeriesSeriesIDNotFound struct {
}

// NewGetSeriesSeriesIDNotFound creates GetSeriesSeriesIDNotFound with default headers values
func NewGetSeriesSeriesIDNotFound() *GetSeriesSeriesIDNotFound {

	return &GetSeriesSeriesIDNotFound{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetSeriesSeriesIDNotFound) GetSeriesSeriesIDResponder() {}

// GetSeriesSeriesIDMethodNotAllowedCode is the HTTP code returned for type GetSeriesSeriesIDMethodNotAllowed
const GetSeriesSeriesIDMethodNotAllowedCode int = 405

/*GetSeriesSeriesIDMethodNotAllowed MethodNotAllowed


swagger:response getSeriesSeriesIdMethodNotAllowed
*/
type GetSeriesSeriesIDMethodNotAllowed struct {
}

// NewGetSeriesSeriesIDMethodNotAllowed creates GetSeriesSeriesIDMethodNotAllowed with default headers values
func NewGetSeriesSeriesIDMethodNotAllowed() *GetSeriesSeriesIDMethodNotAllowed {

	return &GetSeriesSeriesIDMethodNotAllowed{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *GetSeriesSeriesIDMethodNotAllowed) GetSeriesSeriesIDResponder() {}

// GetSeriesSeriesIDInternalServerErrorCode is the HTTP code returned for type GetSeriesSeriesIDInternalServerError
const GetSeriesSeriesIDInternalServerErrorCode int = 500

/*GetSeriesSeriesIDInternalServerError An internal error has occured. See error details.


swagger:response getSeriesSeriesIdInternalServerError
*/
type GetSeriesSeriesIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDInternalServerError creates GetSeriesSeriesIDInternalServerError with default headers values
func NewGetSeriesSeriesIDInternalServerError() *GetSeriesSeriesIDInternalServerError {

	return &GetSeriesSeriesIDInternalServerError{}
}

// WithPayload adds the payload to the get series series Id internal server error response
func (o *GetSeriesSeriesIDInternalServerError) WithPayload(payload *models.APIError) *GetSeriesSeriesIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series Id internal server error response
func (o *GetSeriesSeriesIDInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSeriesSeriesIDInternalServerError) GetSeriesSeriesIDResponder() {}

/*GetSeriesSeriesIDDefault Other error. See error details.


swagger:response getSeriesSeriesIdDefault
*/
type GetSeriesSeriesIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDDefault creates GetSeriesSeriesIDDefault with default headers values
func NewGetSeriesSeriesIDDefault(code int) *GetSeriesSeriesIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSeriesSeriesIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get series series ID default response
func (o *GetSeriesSeriesIDDefault) WithStatusCode(code int) *GetSeriesSeriesIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get series series ID default response
func (o *GetSeriesSeriesIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get series series ID default response
func (o *GetSeriesSeriesIDDefault) WithPayload(payload *models.APIError) *GetSeriesSeriesIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series ID default response
func (o *GetSeriesSeriesIDDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSeriesSeriesIDDefault) GetSeriesSeriesIDResponder() {}

type GetSeriesSeriesIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetSeriesSeriesIDNotImplementedResponder) GetSeriesSeriesIDResponder() {}

func GetSeriesSeriesIDNotImplemented() GetSeriesSeriesIDResponder {
	return &GetSeriesSeriesIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetSeriesSeriesID has not yet been implemented",
		),
	}
}

type GetSeriesSeriesIDResponder interface {
	middleware.Responder
	GetSeriesSeriesIDResponder()
}
