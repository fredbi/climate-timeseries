// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PutSeriesSeriesIDNoContentCode is the HTTP code returned for type PutSeriesSeriesIDNoContent
const PutSeriesSeriesIDNoContentCode int = 204

/*PutSeriesSeriesIDNoContent Series successfully updated.

Check the response headers to retrieve this resource.


swagger:response putSeriesSeriesIdNoContent
*/
type PutSeriesSeriesIDNoContent struct {
	/*The URI of the updated resource.


	 */
	Location strfmt.URI `json:"Location"`
	/*The ID of the updated resource.


	 */
	XID int64 `json:"X-ID"`
}

// NewPutSeriesSeriesIDNoContent creates PutSeriesSeriesIDNoContent with default headers values
func NewPutSeriesSeriesIDNoContent() *PutSeriesSeriesIDNoContent {

	return &PutSeriesSeriesIDNoContent{}
}

// WithLocation adds the location to the put series series Id no content response
func (o *PutSeriesSeriesIDNoContent) WithLocation(location strfmt.URI) *PutSeriesSeriesIDNoContent {
	o.Location = location
	return o
}

// SetLocation sets the location to the put series series Id no content response
func (o *PutSeriesSeriesIDNoContent) SetLocation(location strfmt.URI) {
	o.Location = location
}

// WithXID adds the xId to the put series series Id no content response
func (o *PutSeriesSeriesIDNoContent) WithXID(xID int64) *PutSeriesSeriesIDNoContent {
	o.XID = xID
	return o
}

// SetXID sets the xId to the put series series Id no content response
func (o *PutSeriesSeriesIDNoContent) SetXID(xID int64) {
	o.XID = xID
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location.String()
	if location != "" {
		rw.Header().Set("Location", location)
	}

	// response header X-ID

	xID := swag.FormatInt64(o.XID)
	if xID != "" {
		rw.Header().Set("X-ID", xID)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PutSeriesSeriesIDNoContent) PutSeriesSeriesIDResponder() {}

// PutSeriesSeriesIDBadRequestCode is the HTTP code returned for type PutSeriesSeriesIDBadRequest
const PutSeriesSeriesIDBadRequestCode int = 400

/*PutSeriesSeriesIDBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response putSeriesSeriesIdBadRequest
*/
type PutSeriesSeriesIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutSeriesSeriesIDBadRequest creates PutSeriesSeriesIDBadRequest with default headers values
func NewPutSeriesSeriesIDBadRequest() *PutSeriesSeriesIDBadRequest {

	return &PutSeriesSeriesIDBadRequest{}
}

// WithPayload adds the payload to the put series series Id bad request response
func (o *PutSeriesSeriesIDBadRequest) WithPayload(payload *models.APIError) *PutSeriesSeriesIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put series series Id bad request response
func (o *PutSeriesSeriesIDBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutSeriesSeriesIDBadRequest) PutSeriesSeriesIDResponder() {}

// PutSeriesSeriesIDUnauthorizedCode is the HTTP code returned for type PutSeriesSeriesIDUnauthorized
const PutSeriesSeriesIDUnauthorizedCode int = 401

/*PutSeriesSeriesIDUnauthorized Unauthorized access for a lack of authentication


swagger:response putSeriesSeriesIdUnauthorized
*/
type PutSeriesSeriesIDUnauthorized struct {
}

// NewPutSeriesSeriesIDUnauthorized creates PutSeriesSeriesIDUnauthorized with default headers values
func NewPutSeriesSeriesIDUnauthorized() *PutSeriesSeriesIDUnauthorized {

	return &PutSeriesSeriesIDUnauthorized{}
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *PutSeriesSeriesIDUnauthorized) PutSeriesSeriesIDResponder() {}

// PutSeriesSeriesIDForbiddenCode is the HTTP code returned for type PutSeriesSeriesIDForbidden
const PutSeriesSeriesIDForbiddenCode int = 403

/*PutSeriesSeriesIDForbidden Forbidden access for a lack of sufficient privileges


swagger:response putSeriesSeriesIdForbidden
*/
type PutSeriesSeriesIDForbidden struct {
}

// NewPutSeriesSeriesIDForbidden creates PutSeriesSeriesIDForbidden with default headers values
func NewPutSeriesSeriesIDForbidden() *PutSeriesSeriesIDForbidden {

	return &PutSeriesSeriesIDForbidden{}
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *PutSeriesSeriesIDForbidden) PutSeriesSeriesIDResponder() {}

// PutSeriesSeriesIDNotFoundCode is the HTTP code returned for type PutSeriesSeriesIDNotFound
const PutSeriesSeriesIDNotFoundCode int = 404

/*PutSeriesSeriesIDNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response putSeriesSeriesIdNotFound
*/
type PutSeriesSeriesIDNotFound struct {
}

// NewPutSeriesSeriesIDNotFound creates PutSeriesSeriesIDNotFound with default headers values
func NewPutSeriesSeriesIDNotFound() *PutSeriesSeriesIDNotFound {

	return &PutSeriesSeriesIDNotFound{}
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *PutSeriesSeriesIDNotFound) PutSeriesSeriesIDResponder() {}

// PutSeriesSeriesIDMethodNotAllowedCode is the HTTP code returned for type PutSeriesSeriesIDMethodNotAllowed
const PutSeriesSeriesIDMethodNotAllowedCode int = 405

/*PutSeriesSeriesIDMethodNotAllowed MethodNotAllowed


swagger:response putSeriesSeriesIdMethodNotAllowed
*/
type PutSeriesSeriesIDMethodNotAllowed struct {
}

// NewPutSeriesSeriesIDMethodNotAllowed creates PutSeriesSeriesIDMethodNotAllowed with default headers values
func NewPutSeriesSeriesIDMethodNotAllowed() *PutSeriesSeriesIDMethodNotAllowed {

	return &PutSeriesSeriesIDMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *PutSeriesSeriesIDMethodNotAllowed) PutSeriesSeriesIDResponder() {}

// PutSeriesSeriesIDInternalServerErrorCode is the HTTP code returned for type PutSeriesSeriesIDInternalServerError
const PutSeriesSeriesIDInternalServerErrorCode int = 500

/*PutSeriesSeriesIDInternalServerError An internal error has occured. See error details.


swagger:response putSeriesSeriesIdInternalServerError
*/
type PutSeriesSeriesIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutSeriesSeriesIDInternalServerError creates PutSeriesSeriesIDInternalServerError with default headers values
func NewPutSeriesSeriesIDInternalServerError() *PutSeriesSeriesIDInternalServerError {

	return &PutSeriesSeriesIDInternalServerError{}
}

// WithPayload adds the payload to the put series series Id internal server error response
func (o *PutSeriesSeriesIDInternalServerError) WithPayload(payload *models.APIError) *PutSeriesSeriesIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put series series Id internal server error response
func (o *PutSeriesSeriesIDInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutSeriesSeriesIDInternalServerError) PutSeriesSeriesIDResponder() {}

/*PutSeriesSeriesIDDefault Other error. See error details.


swagger:response putSeriesSeriesIdDefault
*/
type PutSeriesSeriesIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutSeriesSeriesIDDefault creates PutSeriesSeriesIDDefault with default headers values
func NewPutSeriesSeriesIDDefault(code int) *PutSeriesSeriesIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutSeriesSeriesIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put series series ID default response
func (o *PutSeriesSeriesIDDefault) WithStatusCode(code int) *PutSeriesSeriesIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put series series ID default response
func (o *PutSeriesSeriesIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put series series ID default response
func (o *PutSeriesSeriesIDDefault) WithPayload(payload *models.APIError) *PutSeriesSeriesIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put series series ID default response
func (o *PutSeriesSeriesIDDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSeriesSeriesIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutSeriesSeriesIDDefault) PutSeriesSeriesIDResponder() {}

type PutSeriesSeriesIDNotImplementedResponder struct {
	middleware.Responder
}

func (*PutSeriesSeriesIDNotImplementedResponder) PutSeriesSeriesIDResponder() {}

func PutSeriesSeriesIDNotImplemented() PutSeriesSeriesIDResponder {
	return &PutSeriesSeriesIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutSeriesSeriesID has not yet been implemented",
		),
	}
}

type PutSeriesSeriesIDResponder interface {
	middleware.Responder
	PutSeriesSeriesIDResponder()
}
