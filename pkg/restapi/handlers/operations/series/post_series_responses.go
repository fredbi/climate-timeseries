// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PostSeriesCreatedCode is the HTTP code returned for type PostSeriesCreated
const PostSeriesCreatedCode int = 201

/*PostSeriesCreated Series successfully created.

Check the response headers to retrieve this resource.


swagger:response postSeriesCreated
*/
type PostSeriesCreated struct {
	/*The URI of the newly created resource.


	 */
	Location strfmt.URI `json:"Location"`
	/*The ID of the newly created resource.


	 */
	XID int64 `json:"X-ID"`
	/*The URI of the newly created versioned resource, whenever applicable.


	 */
	XLocationVersion strfmt.URI `json:"X-LocationVersion"`
	/*The UUID of the newly created versioned resource, whenever applicable.


	 */
	XVersionID strfmt.UUID `json:"X-VersionID"`
}

// NewPostSeriesCreated creates PostSeriesCreated with default headers values
func NewPostSeriesCreated() *PostSeriesCreated {

	return &PostSeriesCreated{}
}

// WithLocation adds the location to the post series created response
func (o *PostSeriesCreated) WithLocation(location strfmt.URI) *PostSeriesCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the post series created response
func (o *PostSeriesCreated) SetLocation(location strfmt.URI) {
	o.Location = location
}

// WithXID adds the xId to the post series created response
func (o *PostSeriesCreated) WithXID(xID int64) *PostSeriesCreated {
	o.XID = xID
	return o
}

// SetXID sets the xId to the post series created response
func (o *PostSeriesCreated) SetXID(xID int64) {
	o.XID = xID
}

// WithXLocationVersion adds the xLocationVersion to the post series created response
func (o *PostSeriesCreated) WithXLocationVersion(xLocationVersion strfmt.URI) *PostSeriesCreated {
	o.XLocationVersion = xLocationVersion
	return o
}

// SetXLocationVersion sets the xLocationVersion to the post series created response
func (o *PostSeriesCreated) SetXLocationVersion(xLocationVersion strfmt.URI) {
	o.XLocationVersion = xLocationVersion
}

// WithXVersionID adds the xVersionId to the post series created response
func (o *PostSeriesCreated) WithXVersionID(xVersionID strfmt.UUID) *PostSeriesCreated {
	o.XVersionID = xVersionID
	return o
}

// SetXVersionID sets the xVersionId to the post series created response
func (o *PostSeriesCreated) SetXVersionID(xVersionID strfmt.UUID) {
	o.XVersionID = xVersionID
}

// WriteResponse to the client
func (o *PostSeriesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location.String()
	if location != "" {
		rw.Header().Set("Location", location)
	}

	// response header X-ID

	xID := swag.FormatInt64(o.XID)
	if xID != "" {
		rw.Header().Set("X-ID", xID)
	}

	// response header X-LocationVersion

	xLocationVersion := o.XLocationVersion.String()
	if xLocationVersion != "" {
		rw.Header().Set("X-LocationVersion", xLocationVersion)
	}

	// response header X-VersionID

	xVersionID := o.XVersionID.String()
	if xVersionID != "" {
		rw.Header().Set("X-VersionID", xVersionID)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

func (o *PostSeriesCreated) PostSeriesResponder() {}

// PostSeriesBadRequestCode is the HTTP code returned for type PostSeriesBadRequest
const PostSeriesBadRequestCode int = 400

/*PostSeriesBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response postSeriesBadRequest
*/
type PostSeriesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostSeriesBadRequest creates PostSeriesBadRequest with default headers values
func NewPostSeriesBadRequest() *PostSeriesBadRequest {

	return &PostSeriesBadRequest{}
}

// WithPayload adds the payload to the post series bad request response
func (o *PostSeriesBadRequest) WithPayload(payload *models.APIError) *PostSeriesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post series bad request response
func (o *PostSeriesBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSeriesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostSeriesBadRequest) PostSeriesResponder() {}

// PostSeriesUnauthorizedCode is the HTTP code returned for type PostSeriesUnauthorized
const PostSeriesUnauthorizedCode int = 401

/*PostSeriesUnauthorized Unauthorized access for a lack of authentication


swagger:response postSeriesUnauthorized
*/
type PostSeriesUnauthorized struct {
}

// NewPostSeriesUnauthorized creates PostSeriesUnauthorized with default headers values
func NewPostSeriesUnauthorized() *PostSeriesUnauthorized {

	return &PostSeriesUnauthorized{}
}

// WriteResponse to the client
func (o *PostSeriesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *PostSeriesUnauthorized) PostSeriesResponder() {}

// PostSeriesForbiddenCode is the HTTP code returned for type PostSeriesForbidden
const PostSeriesForbiddenCode int = 403

/*PostSeriesForbidden Forbidden access for a lack of sufficient privileges


swagger:response postSeriesForbidden
*/
type PostSeriesForbidden struct {
}

// NewPostSeriesForbidden creates PostSeriesForbidden with default headers values
func NewPostSeriesForbidden() *PostSeriesForbidden {

	return &PostSeriesForbidden{}
}

// WriteResponse to the client
func (o *PostSeriesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *PostSeriesForbidden) PostSeriesResponder() {}

// PostSeriesNotFoundCode is the HTTP code returned for type PostSeriesNotFound
const PostSeriesNotFoundCode int = 404

/*PostSeriesNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response postSeriesNotFound
*/
type PostSeriesNotFound struct {
}

// NewPostSeriesNotFound creates PostSeriesNotFound with default headers values
func NewPostSeriesNotFound() *PostSeriesNotFound {

	return &PostSeriesNotFound{}
}

// WriteResponse to the client
func (o *PostSeriesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *PostSeriesNotFound) PostSeriesResponder() {}

// PostSeriesMethodNotAllowedCode is the HTTP code returned for type PostSeriesMethodNotAllowed
const PostSeriesMethodNotAllowedCode int = 405

/*PostSeriesMethodNotAllowed MethodNotAllowed


swagger:response postSeriesMethodNotAllowed
*/
type PostSeriesMethodNotAllowed struct {
}

// NewPostSeriesMethodNotAllowed creates PostSeriesMethodNotAllowed with default headers values
func NewPostSeriesMethodNotAllowed() *PostSeriesMethodNotAllowed {

	return &PostSeriesMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PostSeriesMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *PostSeriesMethodNotAllowed) PostSeriesResponder() {}

// PostSeriesConflictCode is the HTTP code returned for type PostSeriesConflict
const PostSeriesConflictCode int = 409

/*PostSeriesConflict Resource already exists. An object creation was requested, but this object was already existing.


swagger:response postSeriesConflict
*/
type PostSeriesConflict struct {
}

// NewPostSeriesConflict creates PostSeriesConflict with default headers values
func NewPostSeriesConflict() *PostSeriesConflict {

	return &PostSeriesConflict{}
}

// WriteResponse to the client
func (o *PostSeriesConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

func (o *PostSeriesConflict) PostSeriesResponder() {}

// PostSeriesInternalServerErrorCode is the HTTP code returned for type PostSeriesInternalServerError
const PostSeriesInternalServerErrorCode int = 500

/*PostSeriesInternalServerError An internal error has occured. See error details.


swagger:response postSeriesInternalServerError
*/
type PostSeriesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostSeriesInternalServerError creates PostSeriesInternalServerError with default headers values
func NewPostSeriesInternalServerError() *PostSeriesInternalServerError {

	return &PostSeriesInternalServerError{}
}

// WithPayload adds the payload to the post series internal server error response
func (o *PostSeriesInternalServerError) WithPayload(payload *models.APIError) *PostSeriesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post series internal server error response
func (o *PostSeriesInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSeriesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostSeriesInternalServerError) PostSeriesResponder() {}

/*PostSeriesDefault Other error. See error details.


swagger:response postSeriesDefault
*/
type PostSeriesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostSeriesDefault creates PostSeriesDefault with default headers values
func NewPostSeriesDefault(code int) *PostSeriesDefault {
	if code <= 0 {
		code = 500
	}

	return &PostSeriesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post series default response
func (o *PostSeriesDefault) WithStatusCode(code int) *PostSeriesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post series default response
func (o *PostSeriesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post series default response
func (o *PostSeriesDefault) WithPayload(payload *models.APIError) *PostSeriesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post series default response
func (o *PostSeriesDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSeriesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PostSeriesDefault) PostSeriesResponder() {}

type PostSeriesNotImplementedResponder struct {
	middleware.Responder
}

func (*PostSeriesNotImplementedResponder) PostSeriesResponder() {}

func PostSeriesNotImplemented() PostSeriesResponder {
	return &PostSeriesNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PostSeries has not yet been implemented",
		),
	}
}

type PostSeriesResponder interface {
	middleware.Responder
	PostSeriesResponder()
}
