// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetSeriesSeriesIDSemverOKCode is the HTTP code returned for type GetSeriesSeriesIDSemverOK
const GetSeriesSeriesIDSemverOKCode int = 200

/*GetSeriesSeriesIDSemverOK All semver tagged versions available for a time series.


swagger:response getSeriesSeriesIdSemverOK
*/
type GetSeriesSeriesIDSemverOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDSemverOK creates GetSeriesSeriesIDSemverOK with default headers values
func NewGetSeriesSeriesIDSemverOK() *GetSeriesSeriesIDSemverOK {

	return &GetSeriesSeriesIDSemverOK{}
}

// WithPayload adds the payload to the get series series Id semver o k response
func (o *GetSeriesSeriesIDSemverOK) WithPayload(payload []string) *GetSeriesSeriesIDSemverOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series Id semver o k response
func (o *GetSeriesSeriesIDSemverOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetSeriesSeriesIDSemverOK) GetSeriesSeriesIDSemverResponder() {}

// GetSeriesSeriesIDSemverBadRequestCode is the HTTP code returned for type GetSeriesSeriesIDSemverBadRequest
const GetSeriesSeriesIDSemverBadRequestCode int = 400

/*GetSeriesSeriesIDSemverBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response getSeriesSeriesIdSemverBadRequest
*/
type GetSeriesSeriesIDSemverBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDSemverBadRequest creates GetSeriesSeriesIDSemverBadRequest with default headers values
func NewGetSeriesSeriesIDSemverBadRequest() *GetSeriesSeriesIDSemverBadRequest {

	return &GetSeriesSeriesIDSemverBadRequest{}
}

// WithPayload adds the payload to the get series series Id semver bad request response
func (o *GetSeriesSeriesIDSemverBadRequest) WithPayload(payload *models.APIError) *GetSeriesSeriesIDSemverBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series Id semver bad request response
func (o *GetSeriesSeriesIDSemverBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSeriesSeriesIDSemverBadRequest) GetSeriesSeriesIDSemverResponder() {}

// GetSeriesSeriesIDSemverUnauthorizedCode is the HTTP code returned for type GetSeriesSeriesIDSemverUnauthorized
const GetSeriesSeriesIDSemverUnauthorizedCode int = 401

/*GetSeriesSeriesIDSemverUnauthorized Unauthorized access for a lack of authentication


swagger:response getSeriesSeriesIdSemverUnauthorized
*/
type GetSeriesSeriesIDSemverUnauthorized struct {
}

// NewGetSeriesSeriesIDSemverUnauthorized creates GetSeriesSeriesIDSemverUnauthorized with default headers values
func NewGetSeriesSeriesIDSemverUnauthorized() *GetSeriesSeriesIDSemverUnauthorized {

	return &GetSeriesSeriesIDSemverUnauthorized{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *GetSeriesSeriesIDSemverUnauthorized) GetSeriesSeriesIDSemverResponder() {}

// GetSeriesSeriesIDSemverForbiddenCode is the HTTP code returned for type GetSeriesSeriesIDSemverForbidden
const GetSeriesSeriesIDSemverForbiddenCode int = 403

/*GetSeriesSeriesIDSemverForbidden Forbidden access for a lack of sufficient privileges


swagger:response getSeriesSeriesIdSemverForbidden
*/
type GetSeriesSeriesIDSemverForbidden struct {
}

// NewGetSeriesSeriesIDSemverForbidden creates GetSeriesSeriesIDSemverForbidden with default headers values
func NewGetSeriesSeriesIDSemverForbidden() *GetSeriesSeriesIDSemverForbidden {

	return &GetSeriesSeriesIDSemverForbidden{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *GetSeriesSeriesIDSemverForbidden) GetSeriesSeriesIDSemverResponder() {}

// GetSeriesSeriesIDSemverNotFoundCode is the HTTP code returned for type GetSeriesSeriesIDSemverNotFound
const GetSeriesSeriesIDSemverNotFoundCode int = 404

/*GetSeriesSeriesIDSemverNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response getSeriesSeriesIdSemverNotFound
*/
type GetSeriesSeriesIDSemverNotFound struct {
}

// NewGetSeriesSeriesIDSemverNotFound creates GetSeriesSeriesIDSemverNotFound with default headers values
func NewGetSeriesSeriesIDSemverNotFound() *GetSeriesSeriesIDSemverNotFound {

	return &GetSeriesSeriesIDSemverNotFound{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetSeriesSeriesIDSemverNotFound) GetSeriesSeriesIDSemverResponder() {}

// GetSeriesSeriesIDSemverMethodNotAllowedCode is the HTTP code returned for type GetSeriesSeriesIDSemverMethodNotAllowed
const GetSeriesSeriesIDSemverMethodNotAllowedCode int = 405

/*GetSeriesSeriesIDSemverMethodNotAllowed MethodNotAllowed


swagger:response getSeriesSeriesIdSemverMethodNotAllowed
*/
type GetSeriesSeriesIDSemverMethodNotAllowed struct {
}

// NewGetSeriesSeriesIDSemverMethodNotAllowed creates GetSeriesSeriesIDSemverMethodNotAllowed with default headers values
func NewGetSeriesSeriesIDSemverMethodNotAllowed() *GetSeriesSeriesIDSemverMethodNotAllowed {

	return &GetSeriesSeriesIDSemverMethodNotAllowed{}
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *GetSeriesSeriesIDSemverMethodNotAllowed) GetSeriesSeriesIDSemverResponder() {}

// GetSeriesSeriesIDSemverInternalServerErrorCode is the HTTP code returned for type GetSeriesSeriesIDSemverInternalServerError
const GetSeriesSeriesIDSemverInternalServerErrorCode int = 500

/*GetSeriesSeriesIDSemverInternalServerError An internal error has occured. See error details.


swagger:response getSeriesSeriesIdSemverInternalServerError
*/
type GetSeriesSeriesIDSemverInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDSemverInternalServerError creates GetSeriesSeriesIDSemverInternalServerError with default headers values
func NewGetSeriesSeriesIDSemverInternalServerError() *GetSeriesSeriesIDSemverInternalServerError {

	return &GetSeriesSeriesIDSemverInternalServerError{}
}

// WithPayload adds the payload to the get series series Id semver internal server error response
func (o *GetSeriesSeriesIDSemverInternalServerError) WithPayload(payload *models.APIError) *GetSeriesSeriesIDSemverInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series Id semver internal server error response
func (o *GetSeriesSeriesIDSemverInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSeriesSeriesIDSemverInternalServerError) GetSeriesSeriesIDSemverResponder() {}

/*GetSeriesSeriesIDSemverDefault Other error. See error details.


swagger:response getSeriesSeriesIdSemverDefault
*/
type GetSeriesSeriesIDSemverDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSeriesSeriesIDSemverDefault creates GetSeriesSeriesIDSemverDefault with default headers values
func NewGetSeriesSeriesIDSemverDefault(code int) *GetSeriesSeriesIDSemverDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSeriesSeriesIDSemverDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get series series ID semver default response
func (o *GetSeriesSeriesIDSemverDefault) WithStatusCode(code int) *GetSeriesSeriesIDSemverDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get series series ID semver default response
func (o *GetSeriesSeriesIDSemverDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get series series ID semver default response
func (o *GetSeriesSeriesIDSemverDefault) WithPayload(payload *models.APIError) *GetSeriesSeriesIDSemverDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get series series ID semver default response
func (o *GetSeriesSeriesIDSemverDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSeriesSeriesIDSemverDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSeriesSeriesIDSemverDefault) GetSeriesSeriesIDSemverResponder() {}

type GetSeriesSeriesIDSemverNotImplementedResponder struct {
	middleware.Responder
}

func (*GetSeriesSeriesIDSemverNotImplementedResponder) GetSeriesSeriesIDSemverResponder() {}

func GetSeriesSeriesIDSemverNotImplemented() GetSeriesSeriesIDSemverResponder {
	return &GetSeriesSeriesIDSemverNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetSeriesSeriesIDSemver has not yet been implemented",
		),
	}
}

type GetSeriesSeriesIDSemverResponder interface {
	middleware.Responder
	GetSeriesSeriesIDSemverResponder()
}
