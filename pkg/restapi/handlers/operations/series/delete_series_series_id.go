// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteSeriesSeriesIDHandlerFunc turns a function with the right signature into a delete series series ID handler
type DeleteSeriesSeriesIDHandlerFunc func(DeleteSeriesSeriesIDParams) DeleteSeriesSeriesIDResponder

// Handle executing the request and returning a response
func (fn DeleteSeriesSeriesIDHandlerFunc) Handle(params DeleteSeriesSeriesIDParams) DeleteSeriesSeriesIDResponder {
	return fn(params)
}

// DeleteSeriesSeriesIDHandler interface for that can handle valid delete series series ID params
type DeleteSeriesSeriesIDHandler interface {
	Handle(DeleteSeriesSeriesIDParams) DeleteSeriesSeriesIDResponder
}

// NewDeleteSeriesSeriesID creates a new http.Handler for the delete series series ID operation
func NewDeleteSeriesSeriesID(ctx *middleware.Context, handler DeleteSeriesSeriesIDHandler) *DeleteSeriesSeriesID {
	return &DeleteSeriesSeriesID{Context: ctx, Handler: handler}
}

/* DeleteSeriesSeriesID swagger:route DELETE /series/{seriesId} series deleteSeriesSeriesId

Deletes a time series

All versions and values associated to this series are deleted.

Only the original owner of a series may delete it.


*/
type DeleteSeriesSeriesID struct {
	Context *middleware.Context
	Handler DeleteSeriesSeriesIDHandler
}

func (o *DeleteSeriesSeriesID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteSeriesSeriesIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
