// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetSeriesVersionsVersionedSeriesIDHandlerFunc turns a function with the right signature into a get series versions versioned series ID handler
type GetSeriesVersionsVersionedSeriesIDHandlerFunc func(GetSeriesVersionsVersionedSeriesIDParams) GetSeriesVersionsVersionedSeriesIDResponder

// Handle executing the request and returning a response
func (fn GetSeriesVersionsVersionedSeriesIDHandlerFunc) Handle(params GetSeriesVersionsVersionedSeriesIDParams) GetSeriesVersionsVersionedSeriesIDResponder {
	return fn(params)
}

// GetSeriesVersionsVersionedSeriesIDHandler interface for that can handle valid get series versions versioned series ID params
type GetSeriesVersionsVersionedSeriesIDHandler interface {
	Handle(GetSeriesVersionsVersionedSeriesIDParams) GetSeriesVersionsVersionedSeriesIDResponder
}

// NewGetSeriesVersionsVersionedSeriesID creates a new http.Handler for the get series versions versioned series ID operation
func NewGetSeriesVersionsVersionedSeriesID(ctx *middleware.Context, handler GetSeriesVersionsVersionedSeriesIDHandler) *GetSeriesVersionsVersionedSeriesID {
	return &GetSeriesVersionsVersionedSeriesID{Context: ctx, Handler: handler}
}

/* GetSeriesVersionsVersionedSeriesID swagger:route GET /series/versions/{versionedSeriesId} series versioning getSeriesVersionsVersionedSeriesId

Get a version of a time series

Unless requested by the query parameters, the time series values are not returned by default.


*/
type GetSeriesVersionsVersionedSeriesID struct {
	Context *middleware.Context
	Handler GetSeriesVersionsVersionedSeriesIDHandler
}

func (o *GetSeriesVersionsVersionedSeriesID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetSeriesVersionsVersionedSeriesIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
