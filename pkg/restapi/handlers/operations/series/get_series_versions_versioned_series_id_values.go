// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetSeriesVersionsVersionedSeriesIDValuesHandlerFunc turns a function with the right signature into a get series versions versioned series ID values handler
type GetSeriesVersionsVersionedSeriesIDValuesHandlerFunc func(GetSeriesVersionsVersionedSeriesIDValuesParams) GetSeriesVersionsVersionedSeriesIDValuesResponder

// Handle executing the request and returning a response
func (fn GetSeriesVersionsVersionedSeriesIDValuesHandlerFunc) Handle(params GetSeriesVersionsVersionedSeriesIDValuesParams) GetSeriesVersionsVersionedSeriesIDValuesResponder {
	return fn(params)
}

// GetSeriesVersionsVersionedSeriesIDValuesHandler interface for that can handle valid get series versions versioned series ID values params
type GetSeriesVersionsVersionedSeriesIDValuesHandler interface {
	Handle(GetSeriesVersionsVersionedSeriesIDValuesParams) GetSeriesVersionsVersionedSeriesIDValuesResponder
}

// NewGetSeriesVersionsVersionedSeriesIDValues creates a new http.Handler for the get series versions versioned series ID values operation
func NewGetSeriesVersionsVersionedSeriesIDValues(ctx *middleware.Context, handler GetSeriesVersionsVersionedSeriesIDValuesHandler) *GetSeriesVersionsVersionedSeriesIDValues {
	return &GetSeriesVersionsVersionedSeriesIDValues{Context: ctx, Handler: handler}
}

/* GetSeriesVersionsVersionedSeriesIDValues swagger:route GET /series/versions/{versionedSeriesId}/values series versioning getSeriesVersionsVersionedSeriesIdValues

Get the values of version of a time series

If the request negotiates a response MIME type with text/csv (with the Accept header),
this endpoint produces a CSV file.


*/
type GetSeriesVersionsVersionedSeriesIDValues struct {
	Context *middleware.Context
	Handler GetSeriesVersionsVersionedSeriesIDValuesHandler
}

func (o *GetSeriesVersionsVersionedSeriesIDValues) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetSeriesVersionsVersionedSeriesIDValuesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
