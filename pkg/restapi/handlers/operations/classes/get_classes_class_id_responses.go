// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetClassesClassIDOKCode is the HTTP code returned for type GetClassesClassIDOK
const GetClassesClassIDOKCode int = 200

/*GetClassesClassIDOK Descriptive metadata about nomenclature classes.


swagger:response getClassesClassIdOK
*/
type GetClassesClassIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ClassDescription `json:"body,omitempty"`
}

// NewGetClassesClassIDOK creates GetClassesClassIDOK with default headers values
func NewGetClassesClassIDOK() *GetClassesClassIDOK {

	return &GetClassesClassIDOK{}
}

// WithPayload adds the payload to the get classes class Id o k response
func (o *GetClassesClassIDOK) WithPayload(payload *models.ClassDescription) *GetClassesClassIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get classes class Id o k response
func (o *GetClassesClassIDOK) SetPayload(payload *models.ClassDescription) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClassesClassIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetClassesClassIDOK) GetClassesClassIDResponder() {}

// GetClassesClassIDBadRequestCode is the HTTP code returned for type GetClassesClassIDBadRequest
const GetClassesClassIDBadRequestCode int = 400

/*GetClassesClassIDBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response getClassesClassIdBadRequest
*/
type GetClassesClassIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetClassesClassIDBadRequest creates GetClassesClassIDBadRequest with default headers values
func NewGetClassesClassIDBadRequest() *GetClassesClassIDBadRequest {

	return &GetClassesClassIDBadRequest{}
}

// WithPayload adds the payload to the get classes class Id bad request response
func (o *GetClassesClassIDBadRequest) WithPayload(payload *models.APIError) *GetClassesClassIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get classes class Id bad request response
func (o *GetClassesClassIDBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClassesClassIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetClassesClassIDBadRequest) GetClassesClassIDResponder() {}

// GetClassesClassIDUnauthorizedCode is the HTTP code returned for type GetClassesClassIDUnauthorized
const GetClassesClassIDUnauthorizedCode int = 401

/*GetClassesClassIDUnauthorized Unauthorized access for a lack of authentication


swagger:response getClassesClassIdUnauthorized
*/
type GetClassesClassIDUnauthorized struct {
}

// NewGetClassesClassIDUnauthorized creates GetClassesClassIDUnauthorized with default headers values
func NewGetClassesClassIDUnauthorized() *GetClassesClassIDUnauthorized {

	return &GetClassesClassIDUnauthorized{}
}

// WriteResponse to the client
func (o *GetClassesClassIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *GetClassesClassIDUnauthorized) GetClassesClassIDResponder() {}

// GetClassesClassIDForbiddenCode is the HTTP code returned for type GetClassesClassIDForbidden
const GetClassesClassIDForbiddenCode int = 403

/*GetClassesClassIDForbidden Forbidden access for a lack of sufficient privileges


swagger:response getClassesClassIdForbidden
*/
type GetClassesClassIDForbidden struct {
}

// NewGetClassesClassIDForbidden creates GetClassesClassIDForbidden with default headers values
func NewGetClassesClassIDForbidden() *GetClassesClassIDForbidden {

	return &GetClassesClassIDForbidden{}
}

// WriteResponse to the client
func (o *GetClassesClassIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *GetClassesClassIDForbidden) GetClassesClassIDResponder() {}

// GetClassesClassIDNotFoundCode is the HTTP code returned for type GetClassesClassIDNotFound
const GetClassesClassIDNotFoundCode int = 404

/*GetClassesClassIDNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response getClassesClassIdNotFound
*/
type GetClassesClassIDNotFound struct {
}

// NewGetClassesClassIDNotFound creates GetClassesClassIDNotFound with default headers values
func NewGetClassesClassIDNotFound() *GetClassesClassIDNotFound {

	return &GetClassesClassIDNotFound{}
}

// WriteResponse to the client
func (o *GetClassesClassIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetClassesClassIDNotFound) GetClassesClassIDResponder() {}

// GetClassesClassIDMethodNotAllowedCode is the HTTP code returned for type GetClassesClassIDMethodNotAllowed
const GetClassesClassIDMethodNotAllowedCode int = 405

/*GetClassesClassIDMethodNotAllowed MethodNotAllowed


swagger:response getClassesClassIdMethodNotAllowed
*/
type GetClassesClassIDMethodNotAllowed struct {
}

// NewGetClassesClassIDMethodNotAllowed creates GetClassesClassIDMethodNotAllowed with default headers values
func NewGetClassesClassIDMethodNotAllowed() *GetClassesClassIDMethodNotAllowed {

	return &GetClassesClassIDMethodNotAllowed{}
}

// WriteResponse to the client
func (o *GetClassesClassIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *GetClassesClassIDMethodNotAllowed) GetClassesClassIDResponder() {}

// GetClassesClassIDInternalServerErrorCode is the HTTP code returned for type GetClassesClassIDInternalServerError
const GetClassesClassIDInternalServerErrorCode int = 500

/*GetClassesClassIDInternalServerError An internal error has occured. See error details.


swagger:response getClassesClassIdInternalServerError
*/
type GetClassesClassIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetClassesClassIDInternalServerError creates GetClassesClassIDInternalServerError with default headers values
func NewGetClassesClassIDInternalServerError() *GetClassesClassIDInternalServerError {

	return &GetClassesClassIDInternalServerError{}
}

// WithPayload adds the payload to the get classes class Id internal server error response
func (o *GetClassesClassIDInternalServerError) WithPayload(payload *models.APIError) *GetClassesClassIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get classes class Id internal server error response
func (o *GetClassesClassIDInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClassesClassIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetClassesClassIDInternalServerError) GetClassesClassIDResponder() {}

/*GetClassesClassIDDefault Other error. See error details.


swagger:response getClassesClassIdDefault
*/
type GetClassesClassIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetClassesClassIDDefault creates GetClassesClassIDDefault with default headers values
func NewGetClassesClassIDDefault(code int) *GetClassesClassIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClassesClassIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get classes class ID default response
func (o *GetClassesClassIDDefault) WithStatusCode(code int) *GetClassesClassIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get classes class ID default response
func (o *GetClassesClassIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get classes class ID default response
func (o *GetClassesClassIDDefault) WithPayload(payload *models.APIError) *GetClassesClassIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get classes class ID default response
func (o *GetClassesClassIDDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClassesClassIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetClassesClassIDDefault) GetClassesClassIDResponder() {}

type GetClassesClassIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetClassesClassIDNotImplementedResponder) GetClassesClassIDResponder() {}

func GetClassesClassIDNotImplemented() GetClassesClassIDResponder {
	return &GetClassesClassIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetClassesClassID has not yet been implemented",
		),
	}
}

type GetClassesClassIDResponder interface {
	middleware.Responder
	GetClassesClassIDResponder()
}
