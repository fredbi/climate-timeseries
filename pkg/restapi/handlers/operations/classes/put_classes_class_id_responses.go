// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PutClassesClassIDNoContentCode is the HTTP code returned for type PutClassesClassIDNoContent
const PutClassesClassIDNoContentCode int = 204

/*PutClassesClassIDNoContent Metadata about nomenclature classes successfully updated.


swagger:response putClassesClassIdNoContent
*/
type PutClassesClassIDNoContent struct {

	/*
	  In: Body
	*/
	Payload *models.ClassDescription `json:"body,omitempty"`
}

// NewPutClassesClassIDNoContent creates PutClassesClassIDNoContent with default headers values
func NewPutClassesClassIDNoContent() *PutClassesClassIDNoContent {

	return &PutClassesClassIDNoContent{}
}

// WithPayload adds the payload to the put classes class Id no content response
func (o *PutClassesClassIDNoContent) WithPayload(payload *models.ClassDescription) *PutClassesClassIDNoContent {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put classes class Id no content response
func (o *PutClassesClassIDNoContent) SetPayload(payload *models.ClassDescription) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutClassesClassIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutClassesClassIDNoContent) PutClassesClassIDResponder() {}

// PutClassesClassIDBadRequestCode is the HTTP code returned for type PutClassesClassIDBadRequest
const PutClassesClassIDBadRequestCode int = 400

/*PutClassesClassIDBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response putClassesClassIdBadRequest
*/
type PutClassesClassIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutClassesClassIDBadRequest creates PutClassesClassIDBadRequest with default headers values
func NewPutClassesClassIDBadRequest() *PutClassesClassIDBadRequest {

	return &PutClassesClassIDBadRequest{}
}

// WithPayload adds the payload to the put classes class Id bad request response
func (o *PutClassesClassIDBadRequest) WithPayload(payload *models.APIError) *PutClassesClassIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put classes class Id bad request response
func (o *PutClassesClassIDBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutClassesClassIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutClassesClassIDBadRequest) PutClassesClassIDResponder() {}

// PutClassesClassIDUnauthorizedCode is the HTTP code returned for type PutClassesClassIDUnauthorized
const PutClassesClassIDUnauthorizedCode int = 401

/*PutClassesClassIDUnauthorized Unauthorized access for a lack of authentication


swagger:response putClassesClassIdUnauthorized
*/
type PutClassesClassIDUnauthorized struct {
}

// NewPutClassesClassIDUnauthorized creates PutClassesClassIDUnauthorized with default headers values
func NewPutClassesClassIDUnauthorized() *PutClassesClassIDUnauthorized {

	return &PutClassesClassIDUnauthorized{}
}

// WriteResponse to the client
func (o *PutClassesClassIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *PutClassesClassIDUnauthorized) PutClassesClassIDResponder() {}

// PutClassesClassIDForbiddenCode is the HTTP code returned for type PutClassesClassIDForbidden
const PutClassesClassIDForbiddenCode int = 403

/*PutClassesClassIDForbidden Forbidden access for a lack of sufficient privileges


swagger:response putClassesClassIdForbidden
*/
type PutClassesClassIDForbidden struct {
}

// NewPutClassesClassIDForbidden creates PutClassesClassIDForbidden with default headers values
func NewPutClassesClassIDForbidden() *PutClassesClassIDForbidden {

	return &PutClassesClassIDForbidden{}
}

// WriteResponse to the client
func (o *PutClassesClassIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *PutClassesClassIDForbidden) PutClassesClassIDResponder() {}

// PutClassesClassIDNotFoundCode is the HTTP code returned for type PutClassesClassIDNotFound
const PutClassesClassIDNotFoundCode int = 404

/*PutClassesClassIDNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response putClassesClassIdNotFound
*/
type PutClassesClassIDNotFound struct {
}

// NewPutClassesClassIDNotFound creates PutClassesClassIDNotFound with default headers values
func NewPutClassesClassIDNotFound() *PutClassesClassIDNotFound {

	return &PutClassesClassIDNotFound{}
}

// WriteResponse to the client
func (o *PutClassesClassIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *PutClassesClassIDNotFound) PutClassesClassIDResponder() {}

// PutClassesClassIDMethodNotAllowedCode is the HTTP code returned for type PutClassesClassIDMethodNotAllowed
const PutClassesClassIDMethodNotAllowedCode int = 405

/*PutClassesClassIDMethodNotAllowed MethodNotAllowed


swagger:response putClassesClassIdMethodNotAllowed
*/
type PutClassesClassIDMethodNotAllowed struct {
}

// NewPutClassesClassIDMethodNotAllowed creates PutClassesClassIDMethodNotAllowed with default headers values
func NewPutClassesClassIDMethodNotAllowed() *PutClassesClassIDMethodNotAllowed {

	return &PutClassesClassIDMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PutClassesClassIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *PutClassesClassIDMethodNotAllowed) PutClassesClassIDResponder() {}

// PutClassesClassIDInternalServerErrorCode is the HTTP code returned for type PutClassesClassIDInternalServerError
const PutClassesClassIDInternalServerErrorCode int = 500

/*PutClassesClassIDInternalServerError An internal error has occured. See error details.


swagger:response putClassesClassIdInternalServerError
*/
type PutClassesClassIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutClassesClassIDInternalServerError creates PutClassesClassIDInternalServerError with default headers values
func NewPutClassesClassIDInternalServerError() *PutClassesClassIDInternalServerError {

	return &PutClassesClassIDInternalServerError{}
}

// WithPayload adds the payload to the put classes class Id internal server error response
func (o *PutClassesClassIDInternalServerError) WithPayload(payload *models.APIError) *PutClassesClassIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put classes class Id internal server error response
func (o *PutClassesClassIDInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutClassesClassIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutClassesClassIDInternalServerError) PutClassesClassIDResponder() {}

/*PutClassesClassIDDefault Other error. See error details.


swagger:response putClassesClassIdDefault
*/
type PutClassesClassIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPutClassesClassIDDefault creates PutClassesClassIDDefault with default headers values
func NewPutClassesClassIDDefault(code int) *PutClassesClassIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutClassesClassIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put classes class ID default response
func (o *PutClassesClassIDDefault) WithStatusCode(code int) *PutClassesClassIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put classes class ID default response
func (o *PutClassesClassIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put classes class ID default response
func (o *PutClassesClassIDDefault) WithPayload(payload *models.APIError) *PutClassesClassIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put classes class ID default response
func (o *PutClassesClassIDDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutClassesClassIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutClassesClassIDDefault) PutClassesClassIDResponder() {}

type PutClassesClassIDNotImplementedResponder struct {
	middleware.Responder
}

func (*PutClassesClassIDNotImplementedResponder) PutClassesClassIDResponder() {}

func PutClassesClassIDNotImplemented() PutClassesClassIDResponder {
	return &PutClassesClassIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutClassesClassID has not yet been implemented",
		),
	}
}

type PutClassesClassIDResponder interface {
	middleware.Responder
	PutClassesClassIDResponder()
}
