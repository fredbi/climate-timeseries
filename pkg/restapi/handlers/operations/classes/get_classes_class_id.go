// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetClassesClassIDHandlerFunc turns a function with the right signature into a get classes class ID handler
type GetClassesClassIDHandlerFunc func(GetClassesClassIDParams) GetClassesClassIDResponder

// Handle executing the request and returning a response
func (fn GetClassesClassIDHandlerFunc) Handle(params GetClassesClassIDParams) GetClassesClassIDResponder {
	return fn(params)
}

// GetClassesClassIDHandler interface for that can handle valid get classes class ID params
type GetClassesClassIDHandler interface {
	Handle(GetClassesClassIDParams) GetClassesClassIDResponder
}

// NewGetClassesClassID creates a new http.Handler for the get classes class ID operation
func NewGetClassesClassID(ctx *middleware.Context, handler GetClassesClassIDHandler) *GetClassesClassID {
	return &GetClassesClassID{Context: ctx, Handler: handler}
}

/* GetClassesClassID swagger:route GET /classes/{classId} classes getClassesClassId

Get metadata about a nomenclature class

*/
type GetClassesClassID struct {
	Context *middleware.Context
	Handler GetClassesClassIDHandler
}

func (o *GetClassesClassID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetClassesClassIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
