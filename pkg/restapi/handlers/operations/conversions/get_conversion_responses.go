// Code generated by go-swagger; DO NOT EDIT.

package conversions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetConversionOKCode is the HTTP code returned for type GetConversionOK
const GetConversionOKCode int = 200

/*GetConversionOK A unit conversion specification


swagger:response getConversionOK
*/
type GetConversionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Conversion `json:"body,omitempty"`
}

// NewGetConversionOK creates GetConversionOK with default headers values
func NewGetConversionOK() *GetConversionOK {

	return &GetConversionOK{}
}

// WithPayload adds the payload to the get conversion o k response
func (o *GetConversionOK) WithPayload(payload *models.Conversion) *GetConversionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversion o k response
func (o *GetConversionOK) SetPayload(payload *models.Conversion) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetConversionOK) GetConversionResponder() {}

// GetConversionBadRequestCode is the HTTP code returned for type GetConversionBadRequest
const GetConversionBadRequestCode int = 400

/*GetConversionBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response getConversionBadRequest
*/
type GetConversionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetConversionBadRequest creates GetConversionBadRequest with default headers values
func NewGetConversionBadRequest() *GetConversionBadRequest {

	return &GetConversionBadRequest{}
}

// WithPayload adds the payload to the get conversion bad request response
func (o *GetConversionBadRequest) WithPayload(payload *models.APIError) *GetConversionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversion bad request response
func (o *GetConversionBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetConversionBadRequest) GetConversionResponder() {}

// GetConversionUnauthorizedCode is the HTTP code returned for type GetConversionUnauthorized
const GetConversionUnauthorizedCode int = 401

/*GetConversionUnauthorized Unauthorized access for a lack of authentication


swagger:response getConversionUnauthorized
*/
type GetConversionUnauthorized struct {
}

// NewGetConversionUnauthorized creates GetConversionUnauthorized with default headers values
func NewGetConversionUnauthorized() *GetConversionUnauthorized {

	return &GetConversionUnauthorized{}
}

// WriteResponse to the client
func (o *GetConversionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *GetConversionUnauthorized) GetConversionResponder() {}

// GetConversionForbiddenCode is the HTTP code returned for type GetConversionForbidden
const GetConversionForbiddenCode int = 403

/*GetConversionForbidden Forbidden access for a lack of sufficient privileges


swagger:response getConversionForbidden
*/
type GetConversionForbidden struct {
}

// NewGetConversionForbidden creates GetConversionForbidden with default headers values
func NewGetConversionForbidden() *GetConversionForbidden {

	return &GetConversionForbidden{}
}

// WriteResponse to the client
func (o *GetConversionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *GetConversionForbidden) GetConversionResponder() {}

// GetConversionNotFoundCode is the HTTP code returned for type GetConversionNotFound
const GetConversionNotFoundCode int = 404

/*GetConversionNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response getConversionNotFound
*/
type GetConversionNotFound struct {
}

// NewGetConversionNotFound creates GetConversionNotFound with default headers values
func NewGetConversionNotFound() *GetConversionNotFound {

	return &GetConversionNotFound{}
}

// WriteResponse to the client
func (o *GetConversionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetConversionNotFound) GetConversionResponder() {}

// GetConversionMethodNotAllowedCode is the HTTP code returned for type GetConversionMethodNotAllowed
const GetConversionMethodNotAllowedCode int = 405

/*GetConversionMethodNotAllowed MethodNotAllowed


swagger:response getConversionMethodNotAllowed
*/
type GetConversionMethodNotAllowed struct {
}

// NewGetConversionMethodNotAllowed creates GetConversionMethodNotAllowed with default headers values
func NewGetConversionMethodNotAllowed() *GetConversionMethodNotAllowed {

	return &GetConversionMethodNotAllowed{}
}

// WriteResponse to the client
func (o *GetConversionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *GetConversionMethodNotAllowed) GetConversionResponder() {}

// GetConversionInternalServerErrorCode is the HTTP code returned for type GetConversionInternalServerError
const GetConversionInternalServerErrorCode int = 500

/*GetConversionInternalServerError An internal error has occured. See error details.


swagger:response getConversionInternalServerError
*/
type GetConversionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetConversionInternalServerError creates GetConversionInternalServerError with default headers values
func NewGetConversionInternalServerError() *GetConversionInternalServerError {

	return &GetConversionInternalServerError{}
}

// WithPayload adds the payload to the get conversion internal server error response
func (o *GetConversionInternalServerError) WithPayload(payload *models.APIError) *GetConversionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversion internal server error response
func (o *GetConversionInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetConversionInternalServerError) GetConversionResponder() {}

/*GetConversionDefault Other error. See error details.


swagger:response getConversionDefault
*/
type GetConversionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetConversionDefault creates GetConversionDefault with default headers values
func NewGetConversionDefault(code int) *GetConversionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetConversionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get conversion default response
func (o *GetConversionDefault) WithStatusCode(code int) *GetConversionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get conversion default response
func (o *GetConversionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get conversion default response
func (o *GetConversionDefault) WithPayload(payload *models.APIError) *GetConversionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversion default response
func (o *GetConversionDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetConversionDefault) GetConversionResponder() {}

type GetConversionNotImplementedResponder struct {
	middleware.Responder
}

func (*GetConversionNotImplementedResponder) GetConversionResponder() {}

func GetConversionNotImplemented() GetConversionResponder {
	return &GetConversionNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetConversion has not yet been implemented",
		),
	}
}

type GetConversionResponder interface {
	middleware.Responder
	GetConversionResponder()
}
