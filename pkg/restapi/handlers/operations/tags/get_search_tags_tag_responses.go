// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
	"github.com/fredbi/climate-timeseries/pkg/restapi/models/polymorphs"
)

// GetSearchTagsTagOKCode is the HTTP code returned for type GetSearchTagsTagOK
const GetSearchTagsTagOKCode int = 200

/*GetSearchTagsTagOK All entities that match the searched tag.


swagger:response getSearchTagsTagOK
*/
type GetSearchTagsTagOK struct {

	/*
	  In: Body
	*/
	Payload polymorphs.Entities `json:"body,omitempty"`
}

// NewGetSearchTagsTagOK creates GetSearchTagsTagOK with default headers values
func NewGetSearchTagsTagOK() *GetSearchTagsTagOK {

	return &GetSearchTagsTagOK{}
}

// WithPayload adds the payload to the get search tags tag o k response
func (o *GetSearchTagsTagOK) WithPayload(payload polymorphs.Entities) *GetSearchTagsTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags tag o k response
func (o *GetSearchTagsTagOK) SetPayload(payload polymorphs.Entities) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = polymorphs.Entities{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetSearchTagsTagOK) GetSearchTagsTagResponder() {}

// GetSearchTagsTagBadRequestCode is the HTTP code returned for type GetSearchTagsTagBadRequest
const GetSearchTagsTagBadRequestCode int = 400

/*GetSearchTagsTagBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response getSearchTagsTagBadRequest
*/
type GetSearchTagsTagBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSearchTagsTagBadRequest creates GetSearchTagsTagBadRequest with default headers values
func NewGetSearchTagsTagBadRequest() *GetSearchTagsTagBadRequest {

	return &GetSearchTagsTagBadRequest{}
}

// WithPayload adds the payload to the get search tags tag bad request response
func (o *GetSearchTagsTagBadRequest) WithPayload(payload *models.APIError) *GetSearchTagsTagBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags tag bad request response
func (o *GetSearchTagsTagBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsTagBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSearchTagsTagBadRequest) GetSearchTagsTagResponder() {}

// GetSearchTagsTagUnauthorizedCode is the HTTP code returned for type GetSearchTagsTagUnauthorized
const GetSearchTagsTagUnauthorizedCode int = 401

/*GetSearchTagsTagUnauthorized Unauthorized access for a lack of authentication


swagger:response getSearchTagsTagUnauthorized
*/
type GetSearchTagsTagUnauthorized struct {
}

// NewGetSearchTagsTagUnauthorized creates GetSearchTagsTagUnauthorized with default headers values
func NewGetSearchTagsTagUnauthorized() *GetSearchTagsTagUnauthorized {

	return &GetSearchTagsTagUnauthorized{}
}

// WriteResponse to the client
func (o *GetSearchTagsTagUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *GetSearchTagsTagUnauthorized) GetSearchTagsTagResponder() {}

// GetSearchTagsTagForbiddenCode is the HTTP code returned for type GetSearchTagsTagForbidden
const GetSearchTagsTagForbiddenCode int = 403

/*GetSearchTagsTagForbidden Forbidden access for a lack of sufficient privileges


swagger:response getSearchTagsTagForbidden
*/
type GetSearchTagsTagForbidden struct {
}

// NewGetSearchTagsTagForbidden creates GetSearchTagsTagForbidden with default headers values
func NewGetSearchTagsTagForbidden() *GetSearchTagsTagForbidden {

	return &GetSearchTagsTagForbidden{}
}

// WriteResponse to the client
func (o *GetSearchTagsTagForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *GetSearchTagsTagForbidden) GetSearchTagsTagResponder() {}

// GetSearchTagsTagNotFoundCode is the HTTP code returned for type GetSearchTagsTagNotFound
const GetSearchTagsTagNotFoundCode int = 404

/*GetSearchTagsTagNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response getSearchTagsTagNotFound
*/
type GetSearchTagsTagNotFound struct {
}

// NewGetSearchTagsTagNotFound creates GetSearchTagsTagNotFound with default headers values
func NewGetSearchTagsTagNotFound() *GetSearchTagsTagNotFound {

	return &GetSearchTagsTagNotFound{}
}

// WriteResponse to the client
func (o *GetSearchTagsTagNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetSearchTagsTagNotFound) GetSearchTagsTagResponder() {}

// GetSearchTagsTagMethodNotAllowedCode is the HTTP code returned for type GetSearchTagsTagMethodNotAllowed
const GetSearchTagsTagMethodNotAllowedCode int = 405

/*GetSearchTagsTagMethodNotAllowed MethodNotAllowed


swagger:response getSearchTagsTagMethodNotAllowed
*/
type GetSearchTagsTagMethodNotAllowed struct {
}

// NewGetSearchTagsTagMethodNotAllowed creates GetSearchTagsTagMethodNotAllowed with default headers values
func NewGetSearchTagsTagMethodNotAllowed() *GetSearchTagsTagMethodNotAllowed {

	return &GetSearchTagsTagMethodNotAllowed{}
}

// WriteResponse to the client
func (o *GetSearchTagsTagMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *GetSearchTagsTagMethodNotAllowed) GetSearchTagsTagResponder() {}

// GetSearchTagsTagInternalServerErrorCode is the HTTP code returned for type GetSearchTagsTagInternalServerError
const GetSearchTagsTagInternalServerErrorCode int = 500

/*GetSearchTagsTagInternalServerError An internal error has occured. See error details.


swagger:response getSearchTagsTagInternalServerError
*/
type GetSearchTagsTagInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSearchTagsTagInternalServerError creates GetSearchTagsTagInternalServerError with default headers values
func NewGetSearchTagsTagInternalServerError() *GetSearchTagsTagInternalServerError {

	return &GetSearchTagsTagInternalServerError{}
}

// WithPayload adds the payload to the get search tags tag internal server error response
func (o *GetSearchTagsTagInternalServerError) WithPayload(payload *models.APIError) *GetSearchTagsTagInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags tag internal server error response
func (o *GetSearchTagsTagInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSearchTagsTagInternalServerError) GetSearchTagsTagResponder() {}

/*GetSearchTagsTagDefault Other error. See error details.


swagger:response getSearchTagsTagDefault
*/
type GetSearchTagsTagDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSearchTagsTagDefault creates GetSearchTagsTagDefault with default headers values
func NewGetSearchTagsTagDefault(code int) *GetSearchTagsTagDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSearchTagsTagDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get search tags tag default response
func (o *GetSearchTagsTagDefault) WithStatusCode(code int) *GetSearchTagsTagDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get search tags tag default response
func (o *GetSearchTagsTagDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get search tags tag default response
func (o *GetSearchTagsTagDefault) WithPayload(payload *models.APIError) *GetSearchTagsTagDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags tag default response
func (o *GetSearchTagsTagDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsTagDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSearchTagsTagDefault) GetSearchTagsTagResponder() {}

type GetSearchTagsTagNotImplementedResponder struct {
	middleware.Responder
}

func (*GetSearchTagsTagNotImplementedResponder) GetSearchTagsTagResponder() {}

func GetSearchTagsTagNotImplemented() GetSearchTagsTagResponder {
	return &GetSearchTagsTagNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetSearchTagsTag has not yet been implemented",
		),
	}
}

type GetSearchTagsTagResponder interface {
	middleware.Responder
	GetSearchTagsTagResponder()
}
