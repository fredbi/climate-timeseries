// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetSearchTagsOKCode is the HTTP code returned for type GetSearchTagsOK
const GetSearchTagsOKCode int = 200

/*GetSearchTagsOK All known search tags.


swagger:response getSearchTagsOK
*/
type GetSearchTagsOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetSearchTagsOK creates GetSearchTagsOK with default headers values
func NewGetSearchTagsOK() *GetSearchTagsOK {

	return &GetSearchTagsOK{}
}

// WithPayload adds the payload to the get search tags o k response
func (o *GetSearchTagsOK) WithPayload(payload []string) *GetSearchTagsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags o k response
func (o *GetSearchTagsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetSearchTagsOK) GetSearchTagsResponder() {}

// GetSearchTagsBadRequestCode is the HTTP code returned for type GetSearchTagsBadRequest
const GetSearchTagsBadRequestCode int = 400

/*GetSearchTagsBadRequest Client error in request. Input did not pass validations. See error details.


swagger:response getSearchTagsBadRequest
*/
type GetSearchTagsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSearchTagsBadRequest creates GetSearchTagsBadRequest with default headers values
func NewGetSearchTagsBadRequest() *GetSearchTagsBadRequest {

	return &GetSearchTagsBadRequest{}
}

// WithPayload adds the payload to the get search tags bad request response
func (o *GetSearchTagsBadRequest) WithPayload(payload *models.APIError) *GetSearchTagsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags bad request response
func (o *GetSearchTagsBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSearchTagsBadRequest) GetSearchTagsResponder() {}

// GetSearchTagsUnauthorizedCode is the HTTP code returned for type GetSearchTagsUnauthorized
const GetSearchTagsUnauthorizedCode int = 401

/*GetSearchTagsUnauthorized Unauthorized access for a lack of authentication


swagger:response getSearchTagsUnauthorized
*/
type GetSearchTagsUnauthorized struct {
}

// NewGetSearchTagsUnauthorized creates GetSearchTagsUnauthorized with default headers values
func NewGetSearchTagsUnauthorized() *GetSearchTagsUnauthorized {

	return &GetSearchTagsUnauthorized{}
}

// WriteResponse to the client
func (o *GetSearchTagsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

func (o *GetSearchTagsUnauthorized) GetSearchTagsResponder() {}

// GetSearchTagsForbiddenCode is the HTTP code returned for type GetSearchTagsForbidden
const GetSearchTagsForbiddenCode int = 403

/*GetSearchTagsForbidden Forbidden access for a lack of sufficient privileges


swagger:response getSearchTagsForbidden
*/
type GetSearchTagsForbidden struct {
}

// NewGetSearchTagsForbidden creates GetSearchTagsForbidden with default headers values
func NewGetSearchTagsForbidden() *GetSearchTagsForbidden {

	return &GetSearchTagsForbidden{}
}

// WriteResponse to the client
func (o *GetSearchTagsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

func (o *GetSearchTagsForbidden) GetSearchTagsResponder() {}

// GetSearchTagsNotFoundCode is the HTTP code returned for type GetSearchTagsNotFound
const GetSearchTagsNotFoundCode int = 404

/*GetSearchTagsNotFound Resource not found. The object requested does not exist or is not visible to the user.


swagger:response getSearchTagsNotFound
*/
type GetSearchTagsNotFound struct {
}

// NewGetSearchTagsNotFound creates GetSearchTagsNotFound with default headers values
func NewGetSearchTagsNotFound() *GetSearchTagsNotFound {

	return &GetSearchTagsNotFound{}
}

// WriteResponse to the client
func (o *GetSearchTagsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetSearchTagsNotFound) GetSearchTagsResponder() {}

// GetSearchTagsMethodNotAllowedCode is the HTTP code returned for type GetSearchTagsMethodNotAllowed
const GetSearchTagsMethodNotAllowedCode int = 405

/*GetSearchTagsMethodNotAllowed MethodNotAllowed


swagger:response getSearchTagsMethodNotAllowed
*/
type GetSearchTagsMethodNotAllowed struct {
}

// NewGetSearchTagsMethodNotAllowed creates GetSearchTagsMethodNotAllowed with default headers values
func NewGetSearchTagsMethodNotAllowed() *GetSearchTagsMethodNotAllowed {

	return &GetSearchTagsMethodNotAllowed{}
}

// WriteResponse to the client
func (o *GetSearchTagsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}

func (o *GetSearchTagsMethodNotAllowed) GetSearchTagsResponder() {}

// GetSearchTagsInternalServerErrorCode is the HTTP code returned for type GetSearchTagsInternalServerError
const GetSearchTagsInternalServerErrorCode int = 500

/*GetSearchTagsInternalServerError An internal error has occured. See error details.


swagger:response getSearchTagsInternalServerError
*/
type GetSearchTagsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSearchTagsInternalServerError creates GetSearchTagsInternalServerError with default headers values
func NewGetSearchTagsInternalServerError() *GetSearchTagsInternalServerError {

	return &GetSearchTagsInternalServerError{}
}

// WithPayload adds the payload to the get search tags internal server error response
func (o *GetSearchTagsInternalServerError) WithPayload(payload *models.APIError) *GetSearchTagsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags internal server error response
func (o *GetSearchTagsInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSearchTagsInternalServerError) GetSearchTagsResponder() {}

/*GetSearchTagsDefault Other error. See error details.


swagger:response getSearchTagsDefault
*/
type GetSearchTagsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetSearchTagsDefault creates GetSearchTagsDefault with default headers values
func NewGetSearchTagsDefault(code int) *GetSearchTagsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSearchTagsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get search tags default response
func (o *GetSearchTagsDefault) WithStatusCode(code int) *GetSearchTagsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get search tags default response
func (o *GetSearchTagsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get search tags default response
func (o *GetSearchTagsDefault) WithPayload(payload *models.APIError) *GetSearchTagsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get search tags default response
func (o *GetSearchTagsDefault) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSearchTagsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSearchTagsDefault) GetSearchTagsResponder() {}

type GetSearchTagsNotImplementedResponder struct {
	middleware.Responder
}

func (*GetSearchTagsNotImplementedResponder) GetSearchTagsResponder() {}

func GetSearchTagsNotImplemented() GetSearchTagsResponder {
	return &GetSearchTagsNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetSearchTags has not yet been implemented",
		),
	}
}

type GetSearchTagsResponder interface {
	middleware.Responder
	GetSearchTagsResponder()
}
