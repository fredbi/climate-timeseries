// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
	"github.com/fredbi/climate-timeseries/pkg/restapi/models/polymorphs"
)

// GetSearchTagsTagReader is a Reader for the GetSearchTagsTag structure.
type GetSearchTagsTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchTagsTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSearchTagsTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSearchTagsTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSearchTagsTagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSearchTagsTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSearchTagsTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetSearchTagsTagMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSearchTagsTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSearchTagsTagDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSearchTagsTagOK creates a GetSearchTagsTagOK with default headers values
func NewGetSearchTagsTagOK() *GetSearchTagsTagOK {
	return &GetSearchTagsTagOK{}
}

/* GetSearchTagsTagOK describes a response with status code 200, with default header values.

All entities that match the searched tag.

*/
type GetSearchTagsTagOK struct {
	Payload polymorphs.Entities
}

// IsSuccess returns true when this get search tags tag o k response has a 2xx status code
func (o *GetSearchTagsTagOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get search tags tag o k response has a 3xx status code
func (o *GetSearchTagsTagOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search tags tag o k response has a 4xx status code
func (o *GetSearchTagsTagOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get search tags tag o k response has a 5xx status code
func (o *GetSearchTagsTagOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get search tags tag o k response a status code equal to that given
func (o *GetSearchTagsTagOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSearchTagsTagOK) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagOK  %+v", 200, o.Payload)
}

func (o *GetSearchTagsTagOK) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagOK  %+v", 200, o.Payload)
}

func (o *GetSearchTagsTagOK) GetPayload() polymorphs.Entities {
	return o.Payload
}

func (o *GetSearchTagsTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchTagsTagBadRequest creates a GetSearchTagsTagBadRequest with default headers values
func NewGetSearchTagsTagBadRequest() *GetSearchTagsTagBadRequest {
	return &GetSearchTagsTagBadRequest{}
}

/* GetSearchTagsTagBadRequest describes a response with status code 400, with default header values.

Client error in request. Input did not pass validations. See error details.

*/
type GetSearchTagsTagBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get search tags tag bad request response has a 2xx status code
func (o *GetSearchTagsTagBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search tags tag bad request response has a 3xx status code
func (o *GetSearchTagsTagBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search tags tag bad request response has a 4xx status code
func (o *GetSearchTagsTagBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get search tags tag bad request response has a 5xx status code
func (o *GetSearchTagsTagBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get search tags tag bad request response a status code equal to that given
func (o *GetSearchTagsTagBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSearchTagsTagBadRequest) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagBadRequest  %+v", 400, o.Payload)
}

func (o *GetSearchTagsTagBadRequest) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagBadRequest  %+v", 400, o.Payload)
}

func (o *GetSearchTagsTagBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSearchTagsTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchTagsTagUnauthorized creates a GetSearchTagsTagUnauthorized with default headers values
func NewGetSearchTagsTagUnauthorized() *GetSearchTagsTagUnauthorized {
	return &GetSearchTagsTagUnauthorized{}
}

/* GetSearchTagsTagUnauthorized describes a response with status code 401, with default header values.

Unauthorized access for a lack of authentication

*/
type GetSearchTagsTagUnauthorized struct {
}

// IsSuccess returns true when this get search tags tag unauthorized response has a 2xx status code
func (o *GetSearchTagsTagUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search tags tag unauthorized response has a 3xx status code
func (o *GetSearchTagsTagUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search tags tag unauthorized response has a 4xx status code
func (o *GetSearchTagsTagUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get search tags tag unauthorized response has a 5xx status code
func (o *GetSearchTagsTagUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get search tags tag unauthorized response a status code equal to that given
func (o *GetSearchTagsTagUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSearchTagsTagUnauthorized) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagUnauthorized ", 401)
}

func (o *GetSearchTagsTagUnauthorized) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagUnauthorized ", 401)
}

func (o *GetSearchTagsTagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSearchTagsTagForbidden creates a GetSearchTagsTagForbidden with default headers values
func NewGetSearchTagsTagForbidden() *GetSearchTagsTagForbidden {
	return &GetSearchTagsTagForbidden{}
}

/* GetSearchTagsTagForbidden describes a response with status code 403, with default header values.

Forbidden access for a lack of sufficient privileges

*/
type GetSearchTagsTagForbidden struct {
}

// IsSuccess returns true when this get search tags tag forbidden response has a 2xx status code
func (o *GetSearchTagsTagForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search tags tag forbidden response has a 3xx status code
func (o *GetSearchTagsTagForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search tags tag forbidden response has a 4xx status code
func (o *GetSearchTagsTagForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get search tags tag forbidden response has a 5xx status code
func (o *GetSearchTagsTagForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get search tags tag forbidden response a status code equal to that given
func (o *GetSearchTagsTagForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSearchTagsTagForbidden) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagForbidden ", 403)
}

func (o *GetSearchTagsTagForbidden) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagForbidden ", 403)
}

func (o *GetSearchTagsTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSearchTagsTagNotFound creates a GetSearchTagsTagNotFound with default headers values
func NewGetSearchTagsTagNotFound() *GetSearchTagsTagNotFound {
	return &GetSearchTagsTagNotFound{}
}

/* GetSearchTagsTagNotFound describes a response with status code 404, with default header values.

Resource not found. The object requested does not exist or is not visible to the user.

*/
type GetSearchTagsTagNotFound struct {
}

// IsSuccess returns true when this get search tags tag not found response has a 2xx status code
func (o *GetSearchTagsTagNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search tags tag not found response has a 3xx status code
func (o *GetSearchTagsTagNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search tags tag not found response has a 4xx status code
func (o *GetSearchTagsTagNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get search tags tag not found response has a 5xx status code
func (o *GetSearchTagsTagNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get search tags tag not found response a status code equal to that given
func (o *GetSearchTagsTagNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSearchTagsTagNotFound) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagNotFound ", 404)
}

func (o *GetSearchTagsTagNotFound) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagNotFound ", 404)
}

func (o *GetSearchTagsTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSearchTagsTagMethodNotAllowed creates a GetSearchTagsTagMethodNotAllowed with default headers values
func NewGetSearchTagsTagMethodNotAllowed() *GetSearchTagsTagMethodNotAllowed {
	return &GetSearchTagsTagMethodNotAllowed{}
}

/* GetSearchTagsTagMethodNotAllowed describes a response with status code 405, with default header values.

MethodNotAllowed

*/
type GetSearchTagsTagMethodNotAllowed struct {
}

// IsSuccess returns true when this get search tags tag method not allowed response has a 2xx status code
func (o *GetSearchTagsTagMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search tags tag method not allowed response has a 3xx status code
func (o *GetSearchTagsTagMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search tags tag method not allowed response has a 4xx status code
func (o *GetSearchTagsTagMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get search tags tag method not allowed response has a 5xx status code
func (o *GetSearchTagsTagMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get search tags tag method not allowed response a status code equal to that given
func (o *GetSearchTagsTagMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *GetSearchTagsTagMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagMethodNotAllowed ", 405)
}

func (o *GetSearchTagsTagMethodNotAllowed) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagMethodNotAllowed ", 405)
}

func (o *GetSearchTagsTagMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSearchTagsTagInternalServerError creates a GetSearchTagsTagInternalServerError with default headers values
func NewGetSearchTagsTagInternalServerError() *GetSearchTagsTagInternalServerError {
	return &GetSearchTagsTagInternalServerError{}
}

/* GetSearchTagsTagInternalServerError describes a response with status code 500, with default header values.

An internal error has occured. See error details.

*/
type GetSearchTagsTagInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get search tags tag internal server error response has a 2xx status code
func (o *GetSearchTagsTagInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get search tags tag internal server error response has a 3xx status code
func (o *GetSearchTagsTagInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get search tags tag internal server error response has a 4xx status code
func (o *GetSearchTagsTagInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get search tags tag internal server error response has a 5xx status code
func (o *GetSearchTagsTagInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get search tags tag internal server error response a status code equal to that given
func (o *GetSearchTagsTagInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSearchTagsTagInternalServerError) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSearchTagsTagInternalServerError) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] getSearchTagsTagInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSearchTagsTagInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSearchTagsTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchTagsTagDefault creates a GetSearchTagsTagDefault with default headers values
func NewGetSearchTagsTagDefault(code int) *GetSearchTagsTagDefault {
	return &GetSearchTagsTagDefault{
		_statusCode: code,
	}
}

/* GetSearchTagsTagDefault describes a response with status code -1, with default header values.

Other error. See error details.

*/
type GetSearchTagsTagDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the get search tags tag default response
func (o *GetSearchTagsTagDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get search tags tag default response has a 2xx status code
func (o *GetSearchTagsTagDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get search tags tag default response has a 3xx status code
func (o *GetSearchTagsTagDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get search tags tag default response has a 4xx status code
func (o *GetSearchTagsTagDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get search tags tag default response has a 5xx status code
func (o *GetSearchTagsTagDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get search tags tag default response a status code equal to that given
func (o *GetSearchTagsTagDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetSearchTagsTagDefault) Error() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] GetSearchTagsTag default  %+v", o._statusCode, o.Payload)
}

func (o *GetSearchTagsTagDefault) String() string {
	return fmt.Sprintf("[GET /search/tags/{tag}][%d] GetSearchTagsTag default  %+v", o._statusCode, o.Payload)
}

func (o *GetSearchTagsTagDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSearchTagsTagDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
