// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetSeriesSeriesIDReader is a Reader for the GetSeriesSeriesID structure.
type GetSeriesSeriesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSeriesSeriesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSeriesSeriesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSeriesSeriesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSeriesSeriesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSeriesSeriesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSeriesSeriesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetSeriesSeriesIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSeriesSeriesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSeriesSeriesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSeriesSeriesIDOK creates a GetSeriesSeriesIDOK with default headers values
func NewGetSeriesSeriesIDOK() *GetSeriesSeriesIDOK {
	return &GetSeriesSeriesIDOK{}
}

/* GetSeriesSeriesIDOK describes a response with status code 200, with default header values.

All available versions of a climate timeseries.

*/
type GetSeriesSeriesIDOK struct {
	Payload []models.VersionedSeries
}

// IsSuccess returns true when this get series series Id o k response has a 2xx status code
func (o *GetSeriesSeriesIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get series series Id o k response has a 3xx status code
func (o *GetSeriesSeriesIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series series Id o k response has a 4xx status code
func (o *GetSeriesSeriesIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get series series Id o k response has a 5xx status code
func (o *GetSeriesSeriesIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get series series Id o k response a status code equal to that given
func (o *GetSeriesSeriesIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSeriesSeriesIDOK) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdOK  %+v", 200, o.Payload)
}

func (o *GetSeriesSeriesIDOK) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdOK  %+v", 200, o.Payload)
}

func (o *GetSeriesSeriesIDOK) GetPayload() []models.VersionedSeries {
	return o.Payload
}

func (o *GetSeriesSeriesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesSeriesIDBadRequest creates a GetSeriesSeriesIDBadRequest with default headers values
func NewGetSeriesSeriesIDBadRequest() *GetSeriesSeriesIDBadRequest {
	return &GetSeriesSeriesIDBadRequest{}
}

/* GetSeriesSeriesIDBadRequest describes a response with status code 400, with default header values.

Client error in request. Input did not pass validations. See error details.

*/
type GetSeriesSeriesIDBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get series series Id bad request response has a 2xx status code
func (o *GetSeriesSeriesIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series series Id bad request response has a 3xx status code
func (o *GetSeriesSeriesIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series series Id bad request response has a 4xx status code
func (o *GetSeriesSeriesIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series series Id bad request response has a 5xx status code
func (o *GetSeriesSeriesIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get series series Id bad request response a status code equal to that given
func (o *GetSeriesSeriesIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSeriesSeriesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetSeriesSeriesIDBadRequest) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetSeriesSeriesIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSeriesSeriesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesSeriesIDUnauthorized creates a GetSeriesSeriesIDUnauthorized with default headers values
func NewGetSeriesSeriesIDUnauthorized() *GetSeriesSeriesIDUnauthorized {
	return &GetSeriesSeriesIDUnauthorized{}
}

/* GetSeriesSeriesIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized access for a lack of authentication

*/
type GetSeriesSeriesIDUnauthorized struct {
}

// IsSuccess returns true when this get series series Id unauthorized response has a 2xx status code
func (o *GetSeriesSeriesIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series series Id unauthorized response has a 3xx status code
func (o *GetSeriesSeriesIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series series Id unauthorized response has a 4xx status code
func (o *GetSeriesSeriesIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series series Id unauthorized response has a 5xx status code
func (o *GetSeriesSeriesIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get series series Id unauthorized response a status code equal to that given
func (o *GetSeriesSeriesIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSeriesSeriesIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdUnauthorized ", 401)
}

func (o *GetSeriesSeriesIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdUnauthorized ", 401)
}

func (o *GetSeriesSeriesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesSeriesIDForbidden creates a GetSeriesSeriesIDForbidden with default headers values
func NewGetSeriesSeriesIDForbidden() *GetSeriesSeriesIDForbidden {
	return &GetSeriesSeriesIDForbidden{}
}

/* GetSeriesSeriesIDForbidden describes a response with status code 403, with default header values.

Forbidden access for a lack of sufficient privileges

*/
type GetSeriesSeriesIDForbidden struct {
}

// IsSuccess returns true when this get series series Id forbidden response has a 2xx status code
func (o *GetSeriesSeriesIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series series Id forbidden response has a 3xx status code
func (o *GetSeriesSeriesIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series series Id forbidden response has a 4xx status code
func (o *GetSeriesSeriesIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series series Id forbidden response has a 5xx status code
func (o *GetSeriesSeriesIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get series series Id forbidden response a status code equal to that given
func (o *GetSeriesSeriesIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSeriesSeriesIDForbidden) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdForbidden ", 403)
}

func (o *GetSeriesSeriesIDForbidden) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdForbidden ", 403)
}

func (o *GetSeriesSeriesIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesSeriesIDNotFound creates a GetSeriesSeriesIDNotFound with default headers values
func NewGetSeriesSeriesIDNotFound() *GetSeriesSeriesIDNotFound {
	return &GetSeriesSeriesIDNotFound{}
}

/* GetSeriesSeriesIDNotFound describes a response with status code 404, with default header values.

Resource not found. The object requested does not exist or is not visible to the user.

*/
type GetSeriesSeriesIDNotFound struct {
}

// IsSuccess returns true when this get series series Id not found response has a 2xx status code
func (o *GetSeriesSeriesIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series series Id not found response has a 3xx status code
func (o *GetSeriesSeriesIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series series Id not found response has a 4xx status code
func (o *GetSeriesSeriesIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series series Id not found response has a 5xx status code
func (o *GetSeriesSeriesIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get series series Id not found response a status code equal to that given
func (o *GetSeriesSeriesIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSeriesSeriesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdNotFound ", 404)
}

func (o *GetSeriesSeriesIDNotFound) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdNotFound ", 404)
}

func (o *GetSeriesSeriesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesSeriesIDMethodNotAllowed creates a GetSeriesSeriesIDMethodNotAllowed with default headers values
func NewGetSeriesSeriesIDMethodNotAllowed() *GetSeriesSeriesIDMethodNotAllowed {
	return &GetSeriesSeriesIDMethodNotAllowed{}
}

/* GetSeriesSeriesIDMethodNotAllowed describes a response with status code 405, with default header values.

MethodNotAllowed

*/
type GetSeriesSeriesIDMethodNotAllowed struct {
}

// IsSuccess returns true when this get series series Id method not allowed response has a 2xx status code
func (o *GetSeriesSeriesIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series series Id method not allowed response has a 3xx status code
func (o *GetSeriesSeriesIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series series Id method not allowed response has a 4xx status code
func (o *GetSeriesSeriesIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series series Id method not allowed response has a 5xx status code
func (o *GetSeriesSeriesIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get series series Id method not allowed response a status code equal to that given
func (o *GetSeriesSeriesIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *GetSeriesSeriesIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdMethodNotAllowed ", 405)
}

func (o *GetSeriesSeriesIDMethodNotAllowed) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdMethodNotAllowed ", 405)
}

func (o *GetSeriesSeriesIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesSeriesIDInternalServerError creates a GetSeriesSeriesIDInternalServerError with default headers values
func NewGetSeriesSeriesIDInternalServerError() *GetSeriesSeriesIDInternalServerError {
	return &GetSeriesSeriesIDInternalServerError{}
}

/* GetSeriesSeriesIDInternalServerError describes a response with status code 500, with default header values.

An internal error has occured. See error details.

*/
type GetSeriesSeriesIDInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get series series Id internal server error response has a 2xx status code
func (o *GetSeriesSeriesIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series series Id internal server error response has a 3xx status code
func (o *GetSeriesSeriesIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series series Id internal server error response has a 4xx status code
func (o *GetSeriesSeriesIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get series series Id internal server error response has a 5xx status code
func (o *GetSeriesSeriesIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get series series Id internal server error response a status code equal to that given
func (o *GetSeriesSeriesIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSeriesSeriesIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSeriesSeriesIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] getSeriesSeriesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSeriesSeriesIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSeriesSeriesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesSeriesIDDefault creates a GetSeriesSeriesIDDefault with default headers values
func NewGetSeriesSeriesIDDefault(code int) *GetSeriesSeriesIDDefault {
	return &GetSeriesSeriesIDDefault{
		_statusCode: code,
	}
}

/* GetSeriesSeriesIDDefault describes a response with status code -1, with default header values.

Other error. See error details.

*/
type GetSeriesSeriesIDDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the get series series ID default response
func (o *GetSeriesSeriesIDDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get series series ID default response has a 2xx status code
func (o *GetSeriesSeriesIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get series series ID default response has a 3xx status code
func (o *GetSeriesSeriesIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get series series ID default response has a 4xx status code
func (o *GetSeriesSeriesIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get series series ID default response has a 5xx status code
func (o *GetSeriesSeriesIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get series series ID default response a status code equal to that given
func (o *GetSeriesSeriesIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetSeriesSeriesIDDefault) Error() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] GetSeriesSeriesID default  %+v", o._statusCode, o.Payload)
}

func (o *GetSeriesSeriesIDDefault) String() string {
	return fmt.Sprintf("[GET /series/{seriesId}][%d] GetSeriesSeriesID default  %+v", o._statusCode, o.Payload)
}

func (o *GetSeriesSeriesIDDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSeriesSeriesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
