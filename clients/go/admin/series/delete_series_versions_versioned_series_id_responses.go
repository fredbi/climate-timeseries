// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// DeleteSeriesVersionsVersionedSeriesIDReader is a Reader for the DeleteSeriesVersionsVersionedSeriesID structure.
type DeleteSeriesVersionsVersionedSeriesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSeriesVersionsVersionedSeriesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSeriesVersionsVersionedSeriesIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSeriesVersionsVersionedSeriesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSeriesVersionsVersionedSeriesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSeriesVersionsVersionedSeriesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSeriesVersionsVersionedSeriesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSeriesVersionsVersionedSeriesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteSeriesVersionsVersionedSeriesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteSeriesVersionsVersionedSeriesIDNoContent creates a DeleteSeriesVersionsVersionedSeriesIDNoContent with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDNoContent() *DeleteSeriesVersionsVersionedSeriesIDNoContent {
	return &DeleteSeriesVersionsVersionedSeriesIDNoContent{}
}

/* DeleteSeriesVersionsVersionedSeriesIDNoContent describes a response with status code 204, with default header values.

Version of the time series successfully deleted.

*/
type DeleteSeriesVersionsVersionedSeriesIDNoContent struct {
}

// IsSuccess returns true when this delete series versions versioned series Id no content response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete series versions versioned series Id no content response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete series versions versioned series Id no content response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete series versions versioned series Id no content response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete series versions versioned series Id no content response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdNoContent ", 204)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdNoContent ", 204)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSeriesVersionsVersionedSeriesIDBadRequest creates a DeleteSeriesVersionsVersionedSeriesIDBadRequest with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDBadRequest() *DeleteSeriesVersionsVersionedSeriesIDBadRequest {
	return &DeleteSeriesVersionsVersionedSeriesIDBadRequest{}
}

/* DeleteSeriesVersionsVersionedSeriesIDBadRequest describes a response with status code 400, with default header values.

Client error in request. Input did not pass validations. See error details.

*/
type DeleteSeriesVersionsVersionedSeriesIDBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete series versions versioned series Id bad request response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete series versions versioned series Id bad request response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete series versions versioned series Id bad request response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete series versions versioned series Id bad request response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete series versions versioned series Id bad request response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteSeriesVersionsVersionedSeriesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSeriesVersionsVersionedSeriesIDUnauthorized creates a DeleteSeriesVersionsVersionedSeriesIDUnauthorized with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDUnauthorized() *DeleteSeriesVersionsVersionedSeriesIDUnauthorized {
	return &DeleteSeriesVersionsVersionedSeriesIDUnauthorized{}
}

/* DeleteSeriesVersionsVersionedSeriesIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized access for a lack of authentication

*/
type DeleteSeriesVersionsVersionedSeriesIDUnauthorized struct {
}

// IsSuccess returns true when this delete series versions versioned series Id unauthorized response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete series versions versioned series Id unauthorized response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete series versions versioned series Id unauthorized response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete series versions versioned series Id unauthorized response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete series versions versioned series Id unauthorized response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdUnauthorized ", 401)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdUnauthorized ", 401)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSeriesVersionsVersionedSeriesIDForbidden creates a DeleteSeriesVersionsVersionedSeriesIDForbidden with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDForbidden() *DeleteSeriesVersionsVersionedSeriesIDForbidden {
	return &DeleteSeriesVersionsVersionedSeriesIDForbidden{}
}

/* DeleteSeriesVersionsVersionedSeriesIDForbidden describes a response with status code 403, with default header values.

Forbidden access for a lack of sufficient privileges

*/
type DeleteSeriesVersionsVersionedSeriesIDForbidden struct {
}

// IsSuccess returns true when this delete series versions versioned series Id forbidden response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete series versions versioned series Id forbidden response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete series versions versioned series Id forbidden response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete series versions versioned series Id forbidden response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete series versions versioned series Id forbidden response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdForbidden ", 403)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdForbidden ", 403)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSeriesVersionsVersionedSeriesIDNotFound creates a DeleteSeriesVersionsVersionedSeriesIDNotFound with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDNotFound() *DeleteSeriesVersionsVersionedSeriesIDNotFound {
	return &DeleteSeriesVersionsVersionedSeriesIDNotFound{}
}

/* DeleteSeriesVersionsVersionedSeriesIDNotFound describes a response with status code 404, with default header values.

Resource not found. The object requested does not exist or is not visible to the user.

*/
type DeleteSeriesVersionsVersionedSeriesIDNotFound struct {
}

// IsSuccess returns true when this delete series versions versioned series Id not found response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete series versions versioned series Id not found response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete series versions versioned series Id not found response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete series versions versioned series Id not found response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete series versions versioned series Id not found response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdNotFound ", 404)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdNotFound ", 404)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed creates a DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed() *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed {
	return &DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed{}
}

/* DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed describes a response with status code 405, with default header values.

MethodNotAllowed

*/
type DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed struct {
}

// IsSuccess returns true when this delete series versions versioned series Id method not allowed response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete series versions versioned series Id method not allowed response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete series versions versioned series Id method not allowed response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete series versions versioned series Id method not allowed response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete series versions versioned series Id method not allowed response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdMethodNotAllowed ", 405)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdMethodNotAllowed ", 405)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSeriesVersionsVersionedSeriesIDInternalServerError creates a DeleteSeriesVersionsVersionedSeriesIDInternalServerError with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDInternalServerError() *DeleteSeriesVersionsVersionedSeriesIDInternalServerError {
	return &DeleteSeriesVersionsVersionedSeriesIDInternalServerError{}
}

/* DeleteSeriesVersionsVersionedSeriesIDInternalServerError describes a response with status code 500, with default header values.

An internal error has occured. See error details.

*/
type DeleteSeriesVersionsVersionedSeriesIDInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete series versions versioned series Id internal server error response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete series versions versioned series Id internal server error response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete series versions versioned series Id internal server error response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete series versions versioned series Id internal server error response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete series versions versioned series Id internal server error response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] deleteSeriesVersionsVersionedSeriesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteSeriesVersionsVersionedSeriesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSeriesVersionsVersionedSeriesIDDefault creates a DeleteSeriesVersionsVersionedSeriesIDDefault with default headers values
func NewDeleteSeriesVersionsVersionedSeriesIDDefault(code int) *DeleteSeriesVersionsVersionedSeriesIDDefault {
	return &DeleteSeriesVersionsVersionedSeriesIDDefault{
		_statusCode: code,
	}
}

/* DeleteSeriesVersionsVersionedSeriesIDDefault describes a response with status code -1, with default header values.

Other error. See error details.

*/
type DeleteSeriesVersionsVersionedSeriesIDDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the delete series versions versioned series ID default response
func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete series versions versioned series ID default response has a 2xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete series versions versioned series ID default response has a 3xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete series versions versioned series ID default response has a 4xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete series versions versioned series ID default response has a 5xx status code
func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete series versions versioned series ID default response a status code equal to that given
func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] DeleteSeriesVersionsVersionedSeriesID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) String() string {
	return fmt.Sprintf("[DELETE /series/versions/{versionedSeriesId}][%d] DeleteSeriesVersionsVersionedSeriesID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteSeriesVersionsVersionedSeriesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
