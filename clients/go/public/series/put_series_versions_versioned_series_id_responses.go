// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PutSeriesVersionsVersionedSeriesIDReader is a Reader for the PutSeriesVersionsVersionedSeriesID structure.
type PutSeriesVersionsVersionedSeriesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSeriesVersionsVersionedSeriesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutSeriesVersionsVersionedSeriesIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutSeriesVersionsVersionedSeriesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutSeriesVersionsVersionedSeriesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutSeriesVersionsVersionedSeriesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutSeriesVersionsVersionedSeriesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutSeriesVersionsVersionedSeriesIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutSeriesVersionsVersionedSeriesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutSeriesVersionsVersionedSeriesIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutSeriesVersionsVersionedSeriesIDNoContent creates a PutSeriesVersionsVersionedSeriesIDNoContent with default headers values
func NewPutSeriesVersionsVersionedSeriesIDNoContent() *PutSeriesVersionsVersionedSeriesIDNoContent {
	return &PutSeriesVersionsVersionedSeriesIDNoContent{}
}

/* PutSeriesVersionsVersionedSeriesIDNoContent describes a response with status code 204, with default header values.

 Time series values successfully updated.

Check the response headers to retrieve this resource.

*/
type PutSeriesVersionsVersionedSeriesIDNoContent struct {

	/* The URI of the updated resource.


	   Format: uri
	*/
	Location strfmt.URI

	/* The URI of the updated resource.


	   Format: uri
	*/
	XLocationVersion strfmt.URI

	/* The ID of the updated resource.


	   Format: int64
	*/
	XVersionID int64
}

// IsSuccess returns true when this put series versions versioned series Id no content response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put series versions versioned series Id no content response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put series versions versioned series Id no content response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put series versions versioned series Id no content response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put series versions versioned series Id no content response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PutSeriesVersionsVersionedSeriesIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdNoContent ", 204)
}

func (o *PutSeriesVersionsVersionedSeriesIDNoContent) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdNoContent ", 204)
}

func (o *PutSeriesVersionsVersionedSeriesIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		vallocation, err := formats.Parse("uri", hdrLocation)
		if err != nil {
			return errors.InvalidType("Location", "header", "strfmt.URI", hdrLocation)
		}
		o.Location = *(vallocation.(*strfmt.URI))
	}

	// hydrates response header X-LocationVersion
	hdrXLocationVersion := response.GetHeader("X-LocationVersion")

	if hdrXLocationVersion != "" {
		valxLocationVersion, err := formats.Parse("uri", hdrXLocationVersion)
		if err != nil {
			return errors.InvalidType("X-LocationVersion", "header", "strfmt.URI", hdrXLocationVersion)
		}
		o.XLocationVersion = *(valxLocationVersion.(*strfmt.URI))
	}

	// hydrates response header X-VersionID
	hdrXVersionID := response.GetHeader("X-VersionID")

	if hdrXVersionID != "" {
		valxVersionId, err := swag.ConvertInt64(hdrXVersionID)
		if err != nil {
			return errors.InvalidType("X-VersionID", "header", "int64", hdrXVersionID)
		}
		o.XVersionID = valxVersionId
	}

	return nil
}

// NewPutSeriesVersionsVersionedSeriesIDBadRequest creates a PutSeriesVersionsVersionedSeriesIDBadRequest with default headers values
func NewPutSeriesVersionsVersionedSeriesIDBadRequest() *PutSeriesVersionsVersionedSeriesIDBadRequest {
	return &PutSeriesVersionsVersionedSeriesIDBadRequest{}
}

/* PutSeriesVersionsVersionedSeriesIDBadRequest describes a response with status code 400, with default header values.

Client error in request. Input did not pass validations. See error details.

*/
type PutSeriesVersionsVersionedSeriesIDBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this put series versions versioned series Id bad request response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put series versions versioned series Id bad request response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put series versions versioned series Id bad request response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put series versions versioned series Id bad request response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put series versions versioned series Id bad request response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PutSeriesVersionsVersionedSeriesIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSeriesVersionsVersionedSeriesIDUnauthorized creates a PutSeriesVersionsVersionedSeriesIDUnauthorized with default headers values
func NewPutSeriesVersionsVersionedSeriesIDUnauthorized() *PutSeriesVersionsVersionedSeriesIDUnauthorized {
	return &PutSeriesVersionsVersionedSeriesIDUnauthorized{}
}

/* PutSeriesVersionsVersionedSeriesIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized access for a lack of authentication

*/
type PutSeriesVersionsVersionedSeriesIDUnauthorized struct {
}

// IsSuccess returns true when this put series versions versioned series Id unauthorized response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put series versions versioned series Id unauthorized response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put series versions versioned series Id unauthorized response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put series versions versioned series Id unauthorized response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put series versions versioned series Id unauthorized response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdUnauthorized ", 401)
}

func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdUnauthorized ", 401)
}

func (o *PutSeriesVersionsVersionedSeriesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSeriesVersionsVersionedSeriesIDForbidden creates a PutSeriesVersionsVersionedSeriesIDForbidden with default headers values
func NewPutSeriesVersionsVersionedSeriesIDForbidden() *PutSeriesVersionsVersionedSeriesIDForbidden {
	return &PutSeriesVersionsVersionedSeriesIDForbidden{}
}

/* PutSeriesVersionsVersionedSeriesIDForbidden describes a response with status code 403, with default header values.

Forbidden access for a lack of sufficient privileges

*/
type PutSeriesVersionsVersionedSeriesIDForbidden struct {
}

// IsSuccess returns true when this put series versions versioned series Id forbidden response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put series versions versioned series Id forbidden response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put series versions versioned series Id forbidden response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put series versions versioned series Id forbidden response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put series versions versioned series Id forbidden response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutSeriesVersionsVersionedSeriesIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdForbidden ", 403)
}

func (o *PutSeriesVersionsVersionedSeriesIDForbidden) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdForbidden ", 403)
}

func (o *PutSeriesVersionsVersionedSeriesIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSeriesVersionsVersionedSeriesIDNotFound creates a PutSeriesVersionsVersionedSeriesIDNotFound with default headers values
func NewPutSeriesVersionsVersionedSeriesIDNotFound() *PutSeriesVersionsVersionedSeriesIDNotFound {
	return &PutSeriesVersionsVersionedSeriesIDNotFound{}
}

/* PutSeriesVersionsVersionedSeriesIDNotFound describes a response with status code 404, with default header values.

Resource not found. The object requested does not exist or is not visible to the user.

*/
type PutSeriesVersionsVersionedSeriesIDNotFound struct {
}

// IsSuccess returns true when this put series versions versioned series Id not found response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put series versions versioned series Id not found response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put series versions versioned series Id not found response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put series versions versioned series Id not found response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put series versions versioned series Id not found response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutSeriesVersionsVersionedSeriesIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdNotFound ", 404)
}

func (o *PutSeriesVersionsVersionedSeriesIDNotFound) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdNotFound ", 404)
}

func (o *PutSeriesVersionsVersionedSeriesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSeriesVersionsVersionedSeriesIDMethodNotAllowed creates a PutSeriesVersionsVersionedSeriesIDMethodNotAllowed with default headers values
func NewPutSeriesVersionsVersionedSeriesIDMethodNotAllowed() *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed {
	return &PutSeriesVersionsVersionedSeriesIDMethodNotAllowed{}
}

/* PutSeriesVersionsVersionedSeriesIDMethodNotAllowed describes a response with status code 405, with default header values.

MethodNotAllowed

*/
type PutSeriesVersionsVersionedSeriesIDMethodNotAllowed struct {
}

// IsSuccess returns true when this put series versions versioned series Id method not allowed response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put series versions versioned series Id method not allowed response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put series versions versioned series Id method not allowed response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this put series versions versioned series Id method not allowed response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this put series versions versioned series Id method not allowed response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdMethodNotAllowed ", 405)
}

func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdMethodNotAllowed ", 405)
}

func (o *PutSeriesVersionsVersionedSeriesIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSeriesVersionsVersionedSeriesIDInternalServerError creates a PutSeriesVersionsVersionedSeriesIDInternalServerError with default headers values
func NewPutSeriesVersionsVersionedSeriesIDInternalServerError() *PutSeriesVersionsVersionedSeriesIDInternalServerError {
	return &PutSeriesVersionsVersionedSeriesIDInternalServerError{}
}

/* PutSeriesVersionsVersionedSeriesIDInternalServerError describes a response with status code 500, with default header values.

An internal error has occured. See error details.

*/
type PutSeriesVersionsVersionedSeriesIDInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this put series versions versioned series Id internal server error response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put series versions versioned series Id internal server error response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put series versions versioned series Id internal server error response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put series versions versioned series Id internal server error response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put series versions versioned series Id internal server error response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] putSeriesVersionsVersionedSeriesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PutSeriesVersionsVersionedSeriesIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutSeriesVersionsVersionedSeriesIDDefault creates a PutSeriesVersionsVersionedSeriesIDDefault with default headers values
func NewPutSeriesVersionsVersionedSeriesIDDefault(code int) *PutSeriesVersionsVersionedSeriesIDDefault {
	return &PutSeriesVersionsVersionedSeriesIDDefault{
		_statusCode: code,
	}
}

/* PutSeriesVersionsVersionedSeriesIDDefault describes a response with status code -1, with default header values.

Other error. See error details.

*/
type PutSeriesVersionsVersionedSeriesIDDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the put series versions versioned series ID default response
func (o *PutSeriesVersionsVersionedSeriesIDDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this put series versions versioned series ID default response has a 2xx status code
func (o *PutSeriesVersionsVersionedSeriesIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put series versions versioned series ID default response has a 3xx status code
func (o *PutSeriesVersionsVersionedSeriesIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put series versions versioned series ID default response has a 4xx status code
func (o *PutSeriesVersionsVersionedSeriesIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put series versions versioned series ID default response has a 5xx status code
func (o *PutSeriesVersionsVersionedSeriesIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put series versions versioned series ID default response a status code equal to that given
func (o *PutSeriesVersionsVersionedSeriesIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PutSeriesVersionsVersionedSeriesIDDefault) Error() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] PutSeriesVersionsVersionedSeriesID default  %+v", o._statusCode, o.Payload)
}

func (o *PutSeriesVersionsVersionedSeriesIDDefault) String() string {
	return fmt.Sprintf("[PUT /series/versions/{versionedSeriesId}][%d] PutSeriesVersionsVersionedSeriesID default  %+v", o._statusCode, o.Payload)
}

func (o *PutSeriesVersionsVersionedSeriesIDDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PutSeriesVersionsVersionedSeriesIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
