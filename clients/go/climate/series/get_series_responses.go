// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetSeriesReader is a Reader for the GetSeries structure.
type GetSeriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSeriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSeriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSeriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSeriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSeriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSeriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetSeriesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSeriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSeriesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSeriesOK creates a GetSeriesOK with default headers values
func NewGetSeriesOK() *GetSeriesOK {
	return &GetSeriesOK{}
}

/* GetSeriesOK describes a response with status code 200, with default header values.

Available climate timeseries.

*/
type GetSeriesOK struct {
	Payload []*models.Series
}

// IsSuccess returns true when this get series o k response has a 2xx status code
func (o *GetSeriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get series o k response has a 3xx status code
func (o *GetSeriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series o k response has a 4xx status code
func (o *GetSeriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get series o k response has a 5xx status code
func (o *GetSeriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get series o k response a status code equal to that given
func (o *GetSeriesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetSeriesOK) Error() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesOK  %+v", 200, o.Payload)
}

func (o *GetSeriesOK) String() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesOK  %+v", 200, o.Payload)
}

func (o *GetSeriesOK) GetPayload() []*models.Series {
	return o.Payload
}

func (o *GetSeriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesBadRequest creates a GetSeriesBadRequest with default headers values
func NewGetSeriesBadRequest() *GetSeriesBadRequest {
	return &GetSeriesBadRequest{}
}

/* GetSeriesBadRequest describes a response with status code 400, with default header values.

Client error in request. Input did not pass validations. See error details.

*/
type GetSeriesBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get series bad request response has a 2xx status code
func (o *GetSeriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series bad request response has a 3xx status code
func (o *GetSeriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series bad request response has a 4xx status code
func (o *GetSeriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series bad request response has a 5xx status code
func (o *GetSeriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get series bad request response a status code equal to that given
func (o *GetSeriesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetSeriesBadRequest) Error() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSeriesBadRequest) String() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSeriesBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSeriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesUnauthorized creates a GetSeriesUnauthorized with default headers values
func NewGetSeriesUnauthorized() *GetSeriesUnauthorized {
	return &GetSeriesUnauthorized{}
}

/* GetSeriesUnauthorized describes a response with status code 401, with default header values.

Unauthorized access for a lack of authentication

*/
type GetSeriesUnauthorized struct {
}

// IsSuccess returns true when this get series unauthorized response has a 2xx status code
func (o *GetSeriesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series unauthorized response has a 3xx status code
func (o *GetSeriesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series unauthorized response has a 4xx status code
func (o *GetSeriesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series unauthorized response has a 5xx status code
func (o *GetSeriesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get series unauthorized response a status code equal to that given
func (o *GetSeriesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetSeriesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesUnauthorized ", 401)
}

func (o *GetSeriesUnauthorized) String() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesUnauthorized ", 401)
}

func (o *GetSeriesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesForbidden creates a GetSeriesForbidden with default headers values
func NewGetSeriesForbidden() *GetSeriesForbidden {
	return &GetSeriesForbidden{}
}

/* GetSeriesForbidden describes a response with status code 403, with default header values.

Forbidden access for a lack of sufficient privileges

*/
type GetSeriesForbidden struct {
}

// IsSuccess returns true when this get series forbidden response has a 2xx status code
func (o *GetSeriesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series forbidden response has a 3xx status code
func (o *GetSeriesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series forbidden response has a 4xx status code
func (o *GetSeriesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series forbidden response has a 5xx status code
func (o *GetSeriesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get series forbidden response a status code equal to that given
func (o *GetSeriesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetSeriesForbidden) Error() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesForbidden ", 403)
}

func (o *GetSeriesForbidden) String() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesForbidden ", 403)
}

func (o *GetSeriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesNotFound creates a GetSeriesNotFound with default headers values
func NewGetSeriesNotFound() *GetSeriesNotFound {
	return &GetSeriesNotFound{}
}

/* GetSeriesNotFound describes a response with status code 404, with default header values.

Resource not found. The object requested does not exist or is not visible to the user.

*/
type GetSeriesNotFound struct {
}

// IsSuccess returns true when this get series not found response has a 2xx status code
func (o *GetSeriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series not found response has a 3xx status code
func (o *GetSeriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series not found response has a 4xx status code
func (o *GetSeriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series not found response has a 5xx status code
func (o *GetSeriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get series not found response a status code equal to that given
func (o *GetSeriesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetSeriesNotFound) Error() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesNotFound ", 404)
}

func (o *GetSeriesNotFound) String() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesNotFound ", 404)
}

func (o *GetSeriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesMethodNotAllowed creates a GetSeriesMethodNotAllowed with default headers values
func NewGetSeriesMethodNotAllowed() *GetSeriesMethodNotAllowed {
	return &GetSeriesMethodNotAllowed{}
}

/* GetSeriesMethodNotAllowed describes a response with status code 405, with default header values.

MethodNotAllowed

*/
type GetSeriesMethodNotAllowed struct {
}

// IsSuccess returns true when this get series method not allowed response has a 2xx status code
func (o *GetSeriesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series method not allowed response has a 3xx status code
func (o *GetSeriesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series method not allowed response has a 4xx status code
func (o *GetSeriesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get series method not allowed response has a 5xx status code
func (o *GetSeriesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get series method not allowed response a status code equal to that given
func (o *GetSeriesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *GetSeriesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesMethodNotAllowed ", 405)
}

func (o *GetSeriesMethodNotAllowed) String() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesMethodNotAllowed ", 405)
}

func (o *GetSeriesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSeriesInternalServerError creates a GetSeriesInternalServerError with default headers values
func NewGetSeriesInternalServerError() *GetSeriesInternalServerError {
	return &GetSeriesInternalServerError{}
}

/* GetSeriesInternalServerError describes a response with status code 500, with default header values.

An internal error has occured. See error details.

*/
type GetSeriesInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get series internal server error response has a 2xx status code
func (o *GetSeriesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get series internal server error response has a 3xx status code
func (o *GetSeriesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get series internal server error response has a 4xx status code
func (o *GetSeriesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get series internal server error response has a 5xx status code
func (o *GetSeriesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get series internal server error response a status code equal to that given
func (o *GetSeriesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetSeriesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSeriesInternalServerError) String() string {
	return fmt.Sprintf("[GET /series][%d] getSeriesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSeriesInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSeriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesDefault creates a GetSeriesDefault with default headers values
func NewGetSeriesDefault(code int) *GetSeriesDefault {
	return &GetSeriesDefault{
		_statusCode: code,
	}
}

/* GetSeriesDefault describes a response with status code -1, with default header values.

Other error. See error details.

*/
type GetSeriesDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the get series default response
func (o *GetSeriesDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get series default response has a 2xx status code
func (o *GetSeriesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get series default response has a 3xx status code
func (o *GetSeriesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get series default response has a 4xx status code
func (o *GetSeriesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get series default response has a 5xx status code
func (o *GetSeriesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get series default response a status code equal to that given
func (o *GetSeriesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetSeriesDefault) Error() string {
	return fmt.Sprintf("[GET /series][%d] GetSeries default  %+v", o._statusCode, o.Payload)
}

func (o *GetSeriesDefault) String() string {
	return fmt.Sprintf("[GET /series][%d] GetSeries default  %+v", o._statusCode, o.Payload)
}

func (o *GetSeriesDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetSeriesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
