// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// PutClassesClassIDReader is a Reader for the PutClassesClassID structure.
type PutClassesClassIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutClassesClassIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutClassesClassIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutClassesClassIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutClassesClassIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutClassesClassIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutClassesClassIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPutClassesClassIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutClassesClassIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutClassesClassIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutClassesClassIDNoContent creates a PutClassesClassIDNoContent with default headers values
func NewPutClassesClassIDNoContent() *PutClassesClassIDNoContent {
	return &PutClassesClassIDNoContent{}
}

/* PutClassesClassIDNoContent describes a response with status code 204, with default header values.

Metadata about nomenclature classes successfully updated.

*/
type PutClassesClassIDNoContent struct {
	Payload *models.ClassDescription
}

// IsSuccess returns true when this put classes class Id no content response has a 2xx status code
func (o *PutClassesClassIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put classes class Id no content response has a 3xx status code
func (o *PutClassesClassIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put classes class Id no content response has a 4xx status code
func (o *PutClassesClassIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put classes class Id no content response has a 5xx status code
func (o *PutClassesClassIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put classes class Id no content response a status code equal to that given
func (o *PutClassesClassIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *PutClassesClassIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdNoContent  %+v", 204, o.Payload)
}

func (o *PutClassesClassIDNoContent) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdNoContent  %+v", 204, o.Payload)
}

func (o *PutClassesClassIDNoContent) GetPayload() *models.ClassDescription {
	return o.Payload
}

func (o *PutClassesClassIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClassDescription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClassesClassIDBadRequest creates a PutClassesClassIDBadRequest with default headers values
func NewPutClassesClassIDBadRequest() *PutClassesClassIDBadRequest {
	return &PutClassesClassIDBadRequest{}
}

/* PutClassesClassIDBadRequest describes a response with status code 400, with default header values.

Client error in request. Input did not pass validations. See error details.

*/
type PutClassesClassIDBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this put classes class Id bad request response has a 2xx status code
func (o *PutClassesClassIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put classes class Id bad request response has a 3xx status code
func (o *PutClassesClassIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put classes class Id bad request response has a 4xx status code
func (o *PutClassesClassIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put classes class Id bad request response has a 5xx status code
func (o *PutClassesClassIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put classes class Id bad request response a status code equal to that given
func (o *PutClassesClassIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutClassesClassIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutClassesClassIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutClassesClassIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PutClassesClassIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClassesClassIDUnauthorized creates a PutClassesClassIDUnauthorized with default headers values
func NewPutClassesClassIDUnauthorized() *PutClassesClassIDUnauthorized {
	return &PutClassesClassIDUnauthorized{}
}

/* PutClassesClassIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized access for a lack of authentication

*/
type PutClassesClassIDUnauthorized struct {
}

// IsSuccess returns true when this put classes class Id unauthorized response has a 2xx status code
func (o *PutClassesClassIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put classes class Id unauthorized response has a 3xx status code
func (o *PutClassesClassIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put classes class Id unauthorized response has a 4xx status code
func (o *PutClassesClassIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put classes class Id unauthorized response has a 5xx status code
func (o *PutClassesClassIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put classes class Id unauthorized response a status code equal to that given
func (o *PutClassesClassIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PutClassesClassIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdUnauthorized ", 401)
}

func (o *PutClassesClassIDUnauthorized) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdUnauthorized ", 401)
}

func (o *PutClassesClassIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutClassesClassIDForbidden creates a PutClassesClassIDForbidden with default headers values
func NewPutClassesClassIDForbidden() *PutClassesClassIDForbidden {
	return &PutClassesClassIDForbidden{}
}

/* PutClassesClassIDForbidden describes a response with status code 403, with default header values.

Forbidden access for a lack of sufficient privileges

*/
type PutClassesClassIDForbidden struct {
}

// IsSuccess returns true when this put classes class Id forbidden response has a 2xx status code
func (o *PutClassesClassIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put classes class Id forbidden response has a 3xx status code
func (o *PutClassesClassIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put classes class Id forbidden response has a 4xx status code
func (o *PutClassesClassIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this put classes class Id forbidden response has a 5xx status code
func (o *PutClassesClassIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this put classes class Id forbidden response a status code equal to that given
func (o *PutClassesClassIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PutClassesClassIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdForbidden ", 403)
}

func (o *PutClassesClassIDForbidden) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdForbidden ", 403)
}

func (o *PutClassesClassIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutClassesClassIDNotFound creates a PutClassesClassIDNotFound with default headers values
func NewPutClassesClassIDNotFound() *PutClassesClassIDNotFound {
	return &PutClassesClassIDNotFound{}
}

/* PutClassesClassIDNotFound describes a response with status code 404, with default header values.

Resource not found. The object requested does not exist or is not visible to the user.

*/
type PutClassesClassIDNotFound struct {
}

// IsSuccess returns true when this put classes class Id not found response has a 2xx status code
func (o *PutClassesClassIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put classes class Id not found response has a 3xx status code
func (o *PutClassesClassIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put classes class Id not found response has a 4xx status code
func (o *PutClassesClassIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put classes class Id not found response has a 5xx status code
func (o *PutClassesClassIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put classes class Id not found response a status code equal to that given
func (o *PutClassesClassIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutClassesClassIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdNotFound ", 404)
}

func (o *PutClassesClassIDNotFound) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdNotFound ", 404)
}

func (o *PutClassesClassIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutClassesClassIDMethodNotAllowed creates a PutClassesClassIDMethodNotAllowed with default headers values
func NewPutClassesClassIDMethodNotAllowed() *PutClassesClassIDMethodNotAllowed {
	return &PutClassesClassIDMethodNotAllowed{}
}

/* PutClassesClassIDMethodNotAllowed describes a response with status code 405, with default header values.

MethodNotAllowed

*/
type PutClassesClassIDMethodNotAllowed struct {
}

// IsSuccess returns true when this put classes class Id method not allowed response has a 2xx status code
func (o *PutClassesClassIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put classes class Id method not allowed response has a 3xx status code
func (o *PutClassesClassIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put classes class Id method not allowed response has a 4xx status code
func (o *PutClassesClassIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this put classes class Id method not allowed response has a 5xx status code
func (o *PutClassesClassIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this put classes class Id method not allowed response a status code equal to that given
func (o *PutClassesClassIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *PutClassesClassIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdMethodNotAllowed ", 405)
}

func (o *PutClassesClassIDMethodNotAllowed) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdMethodNotAllowed ", 405)
}

func (o *PutClassesClassIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutClassesClassIDInternalServerError creates a PutClassesClassIDInternalServerError with default headers values
func NewPutClassesClassIDInternalServerError() *PutClassesClassIDInternalServerError {
	return &PutClassesClassIDInternalServerError{}
}

/* PutClassesClassIDInternalServerError describes a response with status code 500, with default header values.

An internal error has occured. See error details.

*/
type PutClassesClassIDInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this put classes class Id internal server error response has a 2xx status code
func (o *PutClassesClassIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put classes class Id internal server error response has a 3xx status code
func (o *PutClassesClassIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put classes class Id internal server error response has a 4xx status code
func (o *PutClassesClassIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put classes class Id internal server error response has a 5xx status code
func (o *PutClassesClassIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put classes class Id internal server error response a status code equal to that given
func (o *PutClassesClassIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutClassesClassIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutClassesClassIDInternalServerError) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] putClassesClassIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutClassesClassIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PutClassesClassIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClassesClassIDDefault creates a PutClassesClassIDDefault with default headers values
func NewPutClassesClassIDDefault(code int) *PutClassesClassIDDefault {
	return &PutClassesClassIDDefault{
		_statusCode: code,
	}
}

/* PutClassesClassIDDefault describes a response with status code -1, with default header values.

Other error. See error details.

*/
type PutClassesClassIDDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the put classes class ID default response
func (o *PutClassesClassIDDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this put classes class ID default response has a 2xx status code
func (o *PutClassesClassIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put classes class ID default response has a 3xx status code
func (o *PutClassesClassIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put classes class ID default response has a 4xx status code
func (o *PutClassesClassIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put classes class ID default response has a 5xx status code
func (o *PutClassesClassIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put classes class ID default response a status code equal to that given
func (o *PutClassesClassIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PutClassesClassIDDefault) Error() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] PutClassesClassID default  %+v", o._statusCode, o.Payload)
}

func (o *PutClassesClassIDDefault) String() string {
	return fmt.Sprintf("[PUT /classes/{classId}][%d] PutClassesClassID default  %+v", o._statusCode, o.Payload)
}

func (o *PutClassesClassIDDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PutClassesClassIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
