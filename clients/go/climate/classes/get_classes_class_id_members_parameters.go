// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetClassesClassIDMembersParams creates a new GetClassesClassIDMembersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetClassesClassIDMembersParams() *GetClassesClassIDMembersParams {
	return &GetClassesClassIDMembersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetClassesClassIDMembersParamsWithTimeout creates a new GetClassesClassIDMembersParams object
// with the ability to set a timeout on a request.
func NewGetClassesClassIDMembersParamsWithTimeout(timeout time.Duration) *GetClassesClassIDMembersParams {
	return &GetClassesClassIDMembersParams{
		timeout: timeout,
	}
}

// NewGetClassesClassIDMembersParamsWithContext creates a new GetClassesClassIDMembersParams object
// with the ability to set a context for a request.
func NewGetClassesClassIDMembersParamsWithContext(ctx context.Context) *GetClassesClassIDMembersParams {
	return &GetClassesClassIDMembersParams{
		Context: ctx,
	}
}

// NewGetClassesClassIDMembersParamsWithHTTPClient creates a new GetClassesClassIDMembersParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetClassesClassIDMembersParamsWithHTTPClient(client *http.Client) *GetClassesClassIDMembersParams {
	return &GetClassesClassIDMembersParams{
		HTTPClient: client,
	}
}

/* GetClassesClassIDMembersParams contains all the parameters to send to the API endpoint
   for the get classes class ID members operation.

   Typically these are written to a http.Request.
*/
type GetClassesClassIDMembersParams struct {

	/* Audit.

	   When audit is specified, the response will also contain the audit trail field.

	*/
	Audit *bool

	/* Brief.

	   When brief is specified, the response will only contain essential data and strip long descriptions.

	*/
	Brief *bool

	/* ClassID.

	     The internal name of a nomenclature class.

	Valid classes are:
	  * constant: mathematical and physical constants
	  * mdimension: base measured dimensions
	  * mdomain: domains that pertain to measurements
	  * measurement: physical and economic measurements
	  * multiplier: unit multipliers aka prefixes (e.g. k,M,G...)
	  * munit: measurement units
	  * musystem: systems of measurement units
	  * ostatus: owner statuses
	  * owner: series owner
	  * period: time series periods (e.g. monthly, yearly...)
	  * role: series owner role
	  * source: data sources
	  * status: series and versions statuses
	  * theme: climate themes
	  * zone: geographical zones
	  * ztype: zone types

	*/
	ClassID string

	/* Deep.

	   When deep is specified, the response will contain a deep representation of the object, rather than just a shallow description.

	*/
	Deep *bool

	/* Glob.

	   Filters the result according to a glob pattern applied on the short name of the requested object.

	*/
	Glob *string

	/* Tag.

	     Filter the result by search for a given keyword, whenever tag search is applicable.

	This parameter has no effect on objects where tag search is not applicable.

	*/
	Tag *string

	/* Tags.

	     Filter the result by search for one tag in the given list of keywords, whenever tag search is applicable.

	Up to 5 tags can be searched.

	This parameter has no effect on objects where tag search is not applicable.

	*/
	Tags []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get classes class ID members params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClassesClassIDMembersParams) WithDefaults() *GetClassesClassIDMembersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get classes class ID members params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClassesClassIDMembersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithTimeout(timeout time.Duration) *GetClassesClassIDMembersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithContext(ctx context.Context) *GetClassesClassIDMembersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithHTTPClient(client *http.Client) *GetClassesClassIDMembersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAudit adds the audit to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithAudit(audit *bool) *GetClassesClassIDMembersParams {
	o.SetAudit(audit)
	return o
}

// SetAudit adds the audit to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetAudit(audit *bool) {
	o.Audit = audit
}

// WithBrief adds the brief to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithBrief(brief *bool) *GetClassesClassIDMembersParams {
	o.SetBrief(brief)
	return o
}

// SetBrief adds the brief to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetBrief(brief *bool) {
	o.Brief = brief
}

// WithClassID adds the classID to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithClassID(classID string) *GetClassesClassIDMembersParams {
	o.SetClassID(classID)
	return o
}

// SetClassID adds the classId to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetClassID(classID string) {
	o.ClassID = classID
}

// WithDeep adds the deep to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithDeep(deep *bool) *GetClassesClassIDMembersParams {
	o.SetDeep(deep)
	return o
}

// SetDeep adds the deep to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetDeep(deep *bool) {
	o.Deep = deep
}

// WithGlob adds the glob to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithGlob(glob *string) *GetClassesClassIDMembersParams {
	o.SetGlob(glob)
	return o
}

// SetGlob adds the glob to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetGlob(glob *string) {
	o.Glob = glob
}

// WithTag adds the tag to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithTag(tag *string) *GetClassesClassIDMembersParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetTag(tag *string) {
	o.Tag = tag
}

// WithTags adds the tags to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) WithTags(tags []string) *GetClassesClassIDMembersParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get classes class ID members params
func (o *GetClassesClassIDMembersParams) SetTags(tags []string) {
	o.Tags = tags
}

// WriteToRequest writes these params to a swagger request
func (o *GetClassesClassIDMembersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Audit != nil {

		// query param audit
		var qrAudit bool

		if o.Audit != nil {
			qrAudit = *o.Audit
		}
		qAudit := swag.FormatBool(qrAudit)
		if qAudit != "" {

			if err := r.SetQueryParam("audit", qAudit); err != nil {
				return err
			}
		}
	}

	if o.Brief != nil {

		// query param brief
		var qrBrief bool

		if o.Brief != nil {
			qrBrief = *o.Brief
		}
		qBrief := swag.FormatBool(qrBrief)
		if qBrief != "" {

			if err := r.SetQueryParam("brief", qBrief); err != nil {
				return err
			}
		}
	}

	// path param classId
	if err := r.SetPathParam("classId", o.ClassID); err != nil {
		return err
	}

	if o.Deep != nil {

		// query param deep
		var qrDeep bool

		if o.Deep != nil {
			qrDeep = *o.Deep
		}
		qDeep := swag.FormatBool(qrDeep)
		if qDeep != "" {

			if err := r.SetQueryParam("deep", qDeep); err != nil {
				return err
			}
		}
	}

	if o.Glob != nil {

		// query param glob
		var qrGlob string

		if o.Glob != nil {
			qrGlob = *o.Glob
		}
		qGlob := qrGlob
		if qGlob != "" {

			if err := r.SetQueryParam("glob", qGlob); err != nil {
				return err
			}
		}
	}

	if o.Tag != nil {

		// query param tag
		var qrTag string

		if o.Tag != nil {
			qrTag = *o.Tag
		}
		qTag := qrTag
		if qTag != "" {

			if err := r.SetQueryParam("tag", qTag); err != nil {
				return err
			}
		}
	}

	if o.Tags != nil {

		// binding items for tags
		joinedTags := o.bindParamTags(reg)

		// query array param tags
		if err := r.SetQueryParam("tags", joinedTags...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetClassesClassIDMembers binds the parameter tags
func (o *GetClassesClassIDMembersParams) bindParamTags(formats strfmt.Registry) []string {
	tagsIR := o.Tags

	var tagsIC []string
	for _, tagsIIR := range tagsIR { // explode []string

		tagsIIV := tagsIIR // string as string
		tagsIC = append(tagsIC, tagsIIV)
	}

	// items.CollectionFormat: "csv"
	tagsIS := swag.JoinByFormat(tagsIC, "csv")

	return tagsIS
}
