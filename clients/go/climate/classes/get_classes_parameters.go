// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetClassesParams creates a new GetClassesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetClassesParams() *GetClassesParams {
	return &GetClassesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetClassesParamsWithTimeout creates a new GetClassesParams object
// with the ability to set a timeout on a request.
func NewGetClassesParamsWithTimeout(timeout time.Duration) *GetClassesParams {
	return &GetClassesParams{
		timeout: timeout,
	}
}

// NewGetClassesParamsWithContext creates a new GetClassesParams object
// with the ability to set a context for a request.
func NewGetClassesParamsWithContext(ctx context.Context) *GetClassesParams {
	return &GetClassesParams{
		Context: ctx,
	}
}

// NewGetClassesParamsWithHTTPClient creates a new GetClassesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetClassesParamsWithHTTPClient(client *http.Client) *GetClassesParams {
	return &GetClassesParams{
		HTTPClient: client,
	}
}

/* GetClassesParams contains all the parameters to send to the API endpoint
   for the get classes operation.

   Typically these are written to a http.Request.
*/
type GetClassesParams struct {

	/* Audit.

	   When audit is specified, the response will also contain the audit trail field.

	*/
	Audit *bool

	/* Brief.

	   When brief is specified, the response will only contain essential data and strip long descriptions.

	*/
	Brief *bool

	/* Deep.

	   When deep is specified, the response will contain a deep representation of the object, rather than just a shallow description.

	*/
	Deep *bool

	/* Glob.

	   Filters the result according to a glob pattern applied on the short name of the requested object.

	*/
	Glob *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get classes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClassesParams) WithDefaults() *GetClassesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get classes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClassesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get classes params
func (o *GetClassesParams) WithTimeout(timeout time.Duration) *GetClassesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get classes params
func (o *GetClassesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get classes params
func (o *GetClassesParams) WithContext(ctx context.Context) *GetClassesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get classes params
func (o *GetClassesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get classes params
func (o *GetClassesParams) WithHTTPClient(client *http.Client) *GetClassesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get classes params
func (o *GetClassesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAudit adds the audit to the get classes params
func (o *GetClassesParams) WithAudit(audit *bool) *GetClassesParams {
	o.SetAudit(audit)
	return o
}

// SetAudit adds the audit to the get classes params
func (o *GetClassesParams) SetAudit(audit *bool) {
	o.Audit = audit
}

// WithBrief adds the brief to the get classes params
func (o *GetClassesParams) WithBrief(brief *bool) *GetClassesParams {
	o.SetBrief(brief)
	return o
}

// SetBrief adds the brief to the get classes params
func (o *GetClassesParams) SetBrief(brief *bool) {
	o.Brief = brief
}

// WithDeep adds the deep to the get classes params
func (o *GetClassesParams) WithDeep(deep *bool) *GetClassesParams {
	o.SetDeep(deep)
	return o
}

// SetDeep adds the deep to the get classes params
func (o *GetClassesParams) SetDeep(deep *bool) {
	o.Deep = deep
}

// WithGlob adds the glob to the get classes params
func (o *GetClassesParams) WithGlob(glob *string) *GetClassesParams {
	o.SetGlob(glob)
	return o
}

// SetGlob adds the glob to the get classes params
func (o *GetClassesParams) SetGlob(glob *string) {
	o.Glob = glob
}

// WriteToRequest writes these params to a swagger request
func (o *GetClassesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Audit != nil {

		// query param audit
		var qrAudit bool

		if o.Audit != nil {
			qrAudit = *o.Audit
		}
		qAudit := swag.FormatBool(qrAudit)
		if qAudit != "" {

			if err := r.SetQueryParam("audit", qAudit); err != nil {
				return err
			}
		}
	}

	if o.Brief != nil {

		// query param brief
		var qrBrief bool

		if o.Brief != nil {
			qrBrief = *o.Brief
		}
		qBrief := swag.FormatBool(qrBrief)
		if qBrief != "" {

			if err := r.SetQueryParam("brief", qBrief); err != nil {
				return err
			}
		}
	}

	if o.Deep != nil {

		// query param deep
		var qrDeep bool

		if o.Deep != nil {
			qrDeep = *o.Deep
		}
		qDeep := swag.FormatBool(qrDeep)
		if qDeep != "" {

			if err := r.SetQueryParam("deep", qDeep); err != nil {
				return err
			}
		}
	}

	if o.Glob != nil {

		// query param glob
		var qrGlob string

		if o.Glob != nil {
			qrGlob = *o.Glob
		}
		qGlob := qrGlob
		if qGlob != "" {

			if err := r.SetQueryParam("glob", qGlob); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
