// Code generated by go-swagger; DO NOT EDIT.

package conversions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fredbi/climate-timeseries/pkg/restapi/models"
)

// GetConversionFromUnitToUnitReader is a Reader for the GetConversionFromUnitToUnit structure.
type GetConversionFromUnitToUnitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConversionFromUnitToUnitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConversionFromUnitToUnitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConversionFromUnitToUnitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConversionFromUnitToUnitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConversionFromUnitToUnitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConversionFromUnitToUnitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetConversionFromUnitToUnitMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConversionFromUnitToUnitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetConversionFromUnitToUnitDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetConversionFromUnitToUnitOK creates a GetConversionFromUnitToUnitOK with default headers values
func NewGetConversionFromUnitToUnitOK() *GetConversionFromUnitToUnitOK {
	return &GetConversionFromUnitToUnitOK{}
}

/* GetConversionFromUnitToUnitOK describes a response with status code 200, with default header values.

A unit conversion specification

*/
type GetConversionFromUnitToUnitOK struct {
	Payload *models.ConversionSpec
}

// IsSuccess returns true when this get conversion from unit to unit o k response has a 2xx status code
func (o *GetConversionFromUnitToUnitOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get conversion from unit to unit o k response has a 3xx status code
func (o *GetConversionFromUnitToUnitOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversion from unit to unit o k response has a 4xx status code
func (o *GetConversionFromUnitToUnitOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversion from unit to unit o k response has a 5xx status code
func (o *GetConversionFromUnitToUnitOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversion from unit to unit o k response a status code equal to that given
func (o *GetConversionFromUnitToUnitOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConversionFromUnitToUnitOK) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitOK  %+v", 200, o.Payload)
}

func (o *GetConversionFromUnitToUnitOK) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitOK  %+v", 200, o.Payload)
}

func (o *GetConversionFromUnitToUnitOK) GetPayload() *models.ConversionSpec {
	return o.Payload
}

func (o *GetConversionFromUnitToUnitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversionSpec)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversionFromUnitToUnitBadRequest creates a GetConversionFromUnitToUnitBadRequest with default headers values
func NewGetConversionFromUnitToUnitBadRequest() *GetConversionFromUnitToUnitBadRequest {
	return &GetConversionFromUnitToUnitBadRequest{}
}

/* GetConversionFromUnitToUnitBadRequest describes a response with status code 400, with default header values.

Client error in request. Input did not pass validations. See error details.

*/
type GetConversionFromUnitToUnitBadRequest struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get conversion from unit to unit bad request response has a 2xx status code
func (o *GetConversionFromUnitToUnitBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversion from unit to unit bad request response has a 3xx status code
func (o *GetConversionFromUnitToUnitBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversion from unit to unit bad request response has a 4xx status code
func (o *GetConversionFromUnitToUnitBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversion from unit to unit bad request response has a 5xx status code
func (o *GetConversionFromUnitToUnitBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversion from unit to unit bad request response a status code equal to that given
func (o *GetConversionFromUnitToUnitBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConversionFromUnitToUnitBadRequest) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversionFromUnitToUnitBadRequest) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitBadRequest  %+v", 400, o.Payload)
}

func (o *GetConversionFromUnitToUnitBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetConversionFromUnitToUnitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversionFromUnitToUnitUnauthorized creates a GetConversionFromUnitToUnitUnauthorized with default headers values
func NewGetConversionFromUnitToUnitUnauthorized() *GetConversionFromUnitToUnitUnauthorized {
	return &GetConversionFromUnitToUnitUnauthorized{}
}

/* GetConversionFromUnitToUnitUnauthorized describes a response with status code 401, with default header values.

Unauthorized access for a lack of authentication

*/
type GetConversionFromUnitToUnitUnauthorized struct {
}

// IsSuccess returns true when this get conversion from unit to unit unauthorized response has a 2xx status code
func (o *GetConversionFromUnitToUnitUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversion from unit to unit unauthorized response has a 3xx status code
func (o *GetConversionFromUnitToUnitUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversion from unit to unit unauthorized response has a 4xx status code
func (o *GetConversionFromUnitToUnitUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversion from unit to unit unauthorized response has a 5xx status code
func (o *GetConversionFromUnitToUnitUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversion from unit to unit unauthorized response a status code equal to that given
func (o *GetConversionFromUnitToUnitUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConversionFromUnitToUnitUnauthorized) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitUnauthorized ", 401)
}

func (o *GetConversionFromUnitToUnitUnauthorized) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitUnauthorized ", 401)
}

func (o *GetConversionFromUnitToUnitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConversionFromUnitToUnitForbidden creates a GetConversionFromUnitToUnitForbidden with default headers values
func NewGetConversionFromUnitToUnitForbidden() *GetConversionFromUnitToUnitForbidden {
	return &GetConversionFromUnitToUnitForbidden{}
}

/* GetConversionFromUnitToUnitForbidden describes a response with status code 403, with default header values.

Forbidden access for a lack of sufficient privileges

*/
type GetConversionFromUnitToUnitForbidden struct {
}

// IsSuccess returns true when this get conversion from unit to unit forbidden response has a 2xx status code
func (o *GetConversionFromUnitToUnitForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversion from unit to unit forbidden response has a 3xx status code
func (o *GetConversionFromUnitToUnitForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversion from unit to unit forbidden response has a 4xx status code
func (o *GetConversionFromUnitToUnitForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversion from unit to unit forbidden response has a 5xx status code
func (o *GetConversionFromUnitToUnitForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversion from unit to unit forbidden response a status code equal to that given
func (o *GetConversionFromUnitToUnitForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetConversionFromUnitToUnitForbidden) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitForbidden ", 403)
}

func (o *GetConversionFromUnitToUnitForbidden) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitForbidden ", 403)
}

func (o *GetConversionFromUnitToUnitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConversionFromUnitToUnitNotFound creates a GetConversionFromUnitToUnitNotFound with default headers values
func NewGetConversionFromUnitToUnitNotFound() *GetConversionFromUnitToUnitNotFound {
	return &GetConversionFromUnitToUnitNotFound{}
}

/* GetConversionFromUnitToUnitNotFound describes a response with status code 404, with default header values.

Resource not found. The object requested does not exist or is not visible to the user.

*/
type GetConversionFromUnitToUnitNotFound struct {
}

// IsSuccess returns true when this get conversion from unit to unit not found response has a 2xx status code
func (o *GetConversionFromUnitToUnitNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversion from unit to unit not found response has a 3xx status code
func (o *GetConversionFromUnitToUnitNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversion from unit to unit not found response has a 4xx status code
func (o *GetConversionFromUnitToUnitNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversion from unit to unit not found response has a 5xx status code
func (o *GetConversionFromUnitToUnitNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversion from unit to unit not found response a status code equal to that given
func (o *GetConversionFromUnitToUnitNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConversionFromUnitToUnitNotFound) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitNotFound ", 404)
}

func (o *GetConversionFromUnitToUnitNotFound) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitNotFound ", 404)
}

func (o *GetConversionFromUnitToUnitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConversionFromUnitToUnitMethodNotAllowed creates a GetConversionFromUnitToUnitMethodNotAllowed with default headers values
func NewGetConversionFromUnitToUnitMethodNotAllowed() *GetConversionFromUnitToUnitMethodNotAllowed {
	return &GetConversionFromUnitToUnitMethodNotAllowed{}
}

/* GetConversionFromUnitToUnitMethodNotAllowed describes a response with status code 405, with default header values.

MethodNotAllowed

*/
type GetConversionFromUnitToUnitMethodNotAllowed struct {
}

// IsSuccess returns true when this get conversion from unit to unit method not allowed response has a 2xx status code
func (o *GetConversionFromUnitToUnitMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversion from unit to unit method not allowed response has a 3xx status code
func (o *GetConversionFromUnitToUnitMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversion from unit to unit method not allowed response has a 4xx status code
func (o *GetConversionFromUnitToUnitMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get conversion from unit to unit method not allowed response has a 5xx status code
func (o *GetConversionFromUnitToUnitMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get conversion from unit to unit method not allowed response a status code equal to that given
func (o *GetConversionFromUnitToUnitMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *GetConversionFromUnitToUnitMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitMethodNotAllowed ", 405)
}

func (o *GetConversionFromUnitToUnitMethodNotAllowed) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitMethodNotAllowed ", 405)
}

func (o *GetConversionFromUnitToUnitMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConversionFromUnitToUnitInternalServerError creates a GetConversionFromUnitToUnitInternalServerError with default headers values
func NewGetConversionFromUnitToUnitInternalServerError() *GetConversionFromUnitToUnitInternalServerError {
	return &GetConversionFromUnitToUnitInternalServerError{}
}

/* GetConversionFromUnitToUnitInternalServerError describes a response with status code 500, with default header values.

An internal error has occured. See error details.

*/
type GetConversionFromUnitToUnitInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this get conversion from unit to unit internal server error response has a 2xx status code
func (o *GetConversionFromUnitToUnitInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get conversion from unit to unit internal server error response has a 3xx status code
func (o *GetConversionFromUnitToUnitInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get conversion from unit to unit internal server error response has a 4xx status code
func (o *GetConversionFromUnitToUnitInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get conversion from unit to unit internal server error response has a 5xx status code
func (o *GetConversionFromUnitToUnitInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get conversion from unit to unit internal server error response a status code equal to that given
func (o *GetConversionFromUnitToUnitInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConversionFromUnitToUnitInternalServerError) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversionFromUnitToUnitInternalServerError) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] getConversionFromUnitToUnitInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConversionFromUnitToUnitInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetConversionFromUnitToUnitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConversionFromUnitToUnitDefault creates a GetConversionFromUnitToUnitDefault with default headers values
func NewGetConversionFromUnitToUnitDefault(code int) *GetConversionFromUnitToUnitDefault {
	return &GetConversionFromUnitToUnitDefault{
		_statusCode: code,
	}
}

/* GetConversionFromUnitToUnitDefault describes a response with status code -1, with default header values.

Other error. See error details.

*/
type GetConversionFromUnitToUnitDefault struct {
	_statusCode int

	Payload *models.APIError
}

// Code gets the status code for the get conversion from unit to unit default response
func (o *GetConversionFromUnitToUnitDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get conversion from unit to unit default response has a 2xx status code
func (o *GetConversionFromUnitToUnitDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get conversion from unit to unit default response has a 3xx status code
func (o *GetConversionFromUnitToUnitDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get conversion from unit to unit default response has a 4xx status code
func (o *GetConversionFromUnitToUnitDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get conversion from unit to unit default response has a 5xx status code
func (o *GetConversionFromUnitToUnitDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get conversion from unit to unit default response a status code equal to that given
func (o *GetConversionFromUnitToUnitDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetConversionFromUnitToUnitDefault) Error() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] GetConversionFromUnitToUnit default  %+v", o._statusCode, o.Payload)
}

func (o *GetConversionFromUnitToUnitDefault) String() string {
	return fmt.Sprintf("[GET /conversion/{fromUnit}/{toUnit}][%d] GetConversionFromUnitToUnit default  %+v", o._statusCode, o.Payload)
}

func (o *GetConversionFromUnitToUnitDefault) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetConversionFromUnitToUnitDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
